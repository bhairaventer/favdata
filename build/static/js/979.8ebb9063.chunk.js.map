{"version":3,"file":"static/js/979.8ebb9063.chunk.js","mappings":"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","sources":["component/customerDetail.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { FaArrowAltCircleLeft,FaArrowAltCircleRight } from \"react-icons/fa\";\r\n\r\nexport default function CustomerDetail(params) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalOrder, settotalOrder] = useState(\"\");\r\n  const [hasMore, setHasMore] = useState(true); // To track if there are more items to load\r\n   const apiKey = \"https://bwithf.onrender.com\"\r\n\r\n\r\nuseEffect(() => {\r\n    fetchuser(currentPage)\r\n}, []);\r\n\r\n \r\n\r\nconst fetchuser = async (page) => {\r\n  try {\r\n      // Define the headers including the authtoken\r\n      const headers = {\r\n          'authtoken': localStorage.getItem(\"token\")\r\n      };\r\n\r\n      // Make the GET request with headers and parameters\r\n      const response = await axios.get(`${apiKey}/api/order/customerdetail/${page}`, { headers });\r\n\r\n      settotalOrder(response.data.totalCount);\r\n\r\n      if (response.data.customerDetail.length === 0) {\r\n          setHasMore(false); // No more data to load\r\n          setData(response.data);\r\n      } else {\r\n          setData(response.data);\r\n          setHasMore(true);\r\n      }\r\n      setLoading(false);\r\n  } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  \r\nconst Previous = () => {\r\n  if (currentPage > 1) {\r\n    setCurrentPage((prevPage) => {\r\n      const newPage = prevPage - 1;\r\n\r\n      //console.log(newPage)\r\n      fetchuser(newPage);\r\n      return newPage;\r\n    });\r\n  }\r\n};\r\n\r\nconst Next = () => {\r\n  //console.log(hasMore)\r\n if( Math.ceil(totalOrder/20)){}\r\n  if (hasMore) {\r\n    setCurrentPage((prevPage) => {\r\n      const newPage = prevPage + 1;\r\n      //console.log(newPage)\r\n      fetchuser(newPage);\r\n      return newPage;\r\n    });\r\n  }\r\n};\r\nconst numclick = (number) => {\r\n   \r\n  if (hasMore) {\r\n    setCurrentPage((prevPage) => {\r\n      const newPage = number\r\n      //console.log(newPage)\r\n      fetchuser(newPage);\r\n      return newPage;\r\n    });\r\n  }\r\n};\r\n\r\n\r\nconst range = (start, end, step = 1) => {\r\n  const result = [];\r\n  for (let i = start; i < end; i += step) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\n\r\nconst totalPages = Math.ceil(totalOrder / 20);\r\nconst containerRef = useRef(null);\r\nconst [scrollPosition, setScrollPosition] = useState(0);\r\nconst pageWidth = 50; \r\nconst scrollLeft = () => {\r\n  if (containerRef.current) {\r\n    const newPosition = scrollPosition - pageWidth;\r\n    setScrollPosition(newPosition);\r\n    containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n  }\r\n};\r\n\r\nconst scrollRight = () => {\r\n  if (containerRef.current) {\r\n    const newPosition = scrollPosition + pageWidth;\r\n    setScrollPosition(newPosition);\r\n    containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n  }\r\n};  \r\n\r\n   if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n\r\n    <div className=\"md:w-[85%] lg:w-[90%] w-full px-4 mt-16\">\r\n    <div className=\"flex justify-between text-white w-full mb-4\">\r\n      <div className=\"lg:text-xl text-lg font-semibold\">Orders</div>\r\n      <div className=\"flex lg:space-x-6 lg:text-sm text-xs space-x-4\">\r\n        <div className=\"cursor-pointer hover:text-gray-300 transition\">Dashboard</div>\r\n        <div className=\"cursor-pointer hover:text-gray-300 transition\">Reports</div>\r\n        <div className=\"cursor-pointer hover:text-gray-300 transition\">All Shipments</div>\r\n      </div>\r\n    </div>\r\n  \r\n    <div className=\"mt-4 max-w-[1000px] mx-auto\">\r\n      <div className=\"bg-gray-800 text-white flex justify-between px-4 py-2 mb-2\">\r\n         <div className=\"w-[400px] border-l border-white\">Address</div>\r\n        <div className=\"w-[200px] border-l border-white\">Pincode</div>\r\n        <div className=\"w-[200px] border-l border-white\">MobNo</div>\r\n       </div>\r\n       \r\n      {data?.customerDetail?.map((person) => (\r\n         <div key={person._id} className=\"bg-gray-100 flex justify-between px-4 py-2 mb-1 items-center\">\r\n          <div className=\"w-[400px]\">{person.Address}</div>\r\n          <div className=\"w-[200px]\">{person.Pincode}</div>\r\n          <div className=\"w-[200px]\">{person.MobNo}</div>\r\n\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className=\"    absolute md:w-[80%]  lg:w-[85%]   w-[90%] mt-10    \">\r\n        <div className=\"text-white w-[100%] pb-5 flex gap-10 justify-center \">\r\n          {currentPage !== 1 ?<button   onClick={()=>{Previous()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>:\r\n          <button disabled  onClick={()=>{Previous()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>}\r\n<div className=\"text-black border-black border-[1px] px-2 rounded-md\">{currentPage}</div>\r\n         { currentPage !== Math.ceil(totalOrder/20)  && totalOrder !== 0 ?  <button onClick={()=>{Next()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>:\r\n          <button disabled onClick={()=>{Next()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>}\r\n        </div>\r\n        <div className=\"w-[100%] pb-5 flex gap-10  justify-center \">\r\n        \r\n\r\n        <div className=\"flex items-center\">\r\n      {/* Scroll Left Button */}\r\n      <button\r\n        onClick={scrollLeft}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 mb-2 py-1 rounded-md mr-2\"\r\n        disabled={scrollPosition <= 0}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {/* Scroll Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative overflow-x-auto hide-scrollbar\"\r\n        style={{ maxWidth: \"150px\", whiteSpace: \"nowrap\" }}\r\n      >\r\n        <div className=\"flex gap-2\">\r\n          {range(1, totalPages+1).map(number => (\r\n            <div onClick={()=>{numclick(number)}}\r\n              key={number}\r\n              className=\"border-black text-center cursor-pointer border-[1px] px-2\"\r\n              style={{ width: pageWidth }}\r\n            >\r\n              {number}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll Right Button */}\r\n      <button\r\n        onClick={scrollRight}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 mb-2 rounded-md ml-2\"\r\n        disabled={scrollPosition >= (containerRef.current?.scrollWidth - containerRef.current?.clientWidth)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n        </div>\r\n        </div>\r\n  </div>\r\n  \r\n   \r\n  );\r\n}\r\n"],"names":["CustomerDetail","params","_data$customerDetail","_containerRef$current","_containerRef$current2","data","setData","useState","loading","setLoading","error","setError","currentPage","setCurrentPage","totalOrder","settotalOrder","hasMore","setHasMore","useEffect","fetchuser","async","headers","localStorage","getItem","response","axios","get","page","totalCount","customerDetail","length","Previous","prevPage","newPage","Next","Math","ceil","totalPages","containerRef","useRef","scrollPosition","setScrollPosition","_jsx","children","_jsxs","message","className","map","person","Address","Pincode","MobNo","_id","onClick","FaArrowAltCircleLeft","disabled","FaArrowAltCircleRight","scrollLeft","current","newPosition","scrollTo","left","behavior","ref","style","maxWidth","whiteSpace","start","end","step","arguments","undefined","result","i","push","range","number","numclick","width","scrollRight","scrollWidth","clientWidth"],"sourceRoot":""}