{"version":3,"file":"static/js/127.e9860990.chunk.js","mappings":"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","sources":["component/products/createcombo.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport AddPopup from '../popup';\r\n\r\nexport default function CreateCombo(params) {\r\n  const [idsofproduct, setIdsofproduct] = useState([]);\r\n  const [errdata, seterrdata] = useState('');\r\n  const [serialInput, setSerialInput] = useState('');\r\n  const [serialInput1, setSerialInput1] = useState('');\r\n  const [serialNumbers, setSerialNumbers] = useState([]);\r\n  const [serialNumbers1, setSerialNumbers1] = useState([]);\r\n  const [Serialrequired, setSerialrequired] = useState('');\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [errmassage, seterrmassage] = useState('')\r\n\r\n    const apiKey = \"https://backend-mqr6.onrender.com\"\r\n \r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        // Define headers including the auth token\r\n        const headers = {\r\n          'authtoken': localStorage.getItem(\"token\")\r\n        };\r\n\r\n        // Make the GET request with headers\r\n        const response = await axios.get(`${apiKey}/api/product/productnames`, { headers });\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      setFilteredProducts(products.productNames.filter(name =>\r\n        name.toLowerCase().includes(query.toLowerCase())\r\n      ));\r\n    } else {\r\n      setFilteredProducts([]);\r\n    }\r\n  }, [query, products]);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    if (serialNumbers.length === 0) errors.serialNumbers = 'At least one product is required';\r\n    // if (serialNumbers1.length === 0) errors.serialNumbers1 = 'At least one other name is required';\r\n    if (!Serialrequired) errors.Serialrequired = 'Serial requirement status is required';\r\n\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const addpurchase = async () => {\r\n    if (!validateForm()) return;\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      const response = await axios.post(\r\n        `${apiKey}/api/combo/addcomboproduct`,\r\n        { products: idsofproduct, Serialrequired, othername: serialNumbers1 },\r\n        { headers: { \"authtoken\": token } }\r\n      );\r\n  \r\n      if (response.data.success) {\r\n        seterrdata(response.data);\r\n        seterrmassage(\r\n          <>\r\n            <p className=\"text-green-600 font-semibold text-lg mb-2\">{response.data.message}</p>\r\n            <div className=\"relative w-full h-2 rounded-full overflow-hidden bg-green-200 mt-4\">\r\n              <div className=\"absolute top-0 left-0 h-full bg-green-500 animate-progress-bar2\" style={{ animationDuration: '0.5s' }}></div>\r\n            </div>\r\n          </>\r\n        );\r\n      } else {\r\n        seterrmassage(\r\n          <>\r\n            <p className=\"text-red-600 font-semibold text-lg mb-2\">{response.data.message}</p>\r\n            <div className=\"relative w-full h-2 rounded-full overflow-hidden bg-red-200 mt-4\">\r\n              <div className=\"absolute top-0 left-0 h-full bg-red-500 animate-progress-bar2\" style={{ animationDuration: '0.5s' }}></div>\r\n            </div>\r\n          </>\r\n        );\r\n      }\r\n  \r\n      handleAddItem();\r\n  \r\n      // Reset state\r\n      setIdsofproduct('');\r\n      setSerialrequired('YES');\r\n      setSerialNumbers1([]);\r\n      setSerialNumbers([]);\r\n      setQuery('');\r\n      setSerialInput('');\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n  \r\n \r\n  const fetchProductname = async (name) => {\r\n    try {\r\n      let token = localStorage.getItem('token')\r\n      const response = await axios.get(`${apiKey}/api/product/fetchsingleproduct/${name}`,{method: 'GET',\r\n        headers:{\r\n             \r\n            'authtoken': token\r\n        },\r\n       });\r\n       console.log(response.data.othername1)\r\n\r\n       setQuery(response.data.othername1.name);\r\n      setIdsofproduct((prevIds) => {\r\n        if (!prevIds.includes(response.data.othername1._id)) {\r\n          return [...prevIds, response.data.othername1._id];\r\n        }\r\n        return prevIds;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n \r\n    const handleAddSerial = () => {\r\n \r\n    if (query.trim()) {\r\n\r\n      if (products.productNames.some(name => name.toLowerCase() === query.toLowerCase().trim())) {\r\n        setSerialNumbers([...serialNumbers, query.trim()]);\r\n         setQuery('');\r\n         setSerialInput('');\r\n     } else {\r\n        return; // This line can be omitted if you don't need to explicitly return\r\n    }\r\n    \r\n    }\r\n  };\r\n\r\n  const handleAddSerial1 = () => {\r\n    if (serialInput1.trim()) {\r\n      setSerialNumbers1([...serialNumbers1, serialInput1.trim()]);\r\n              setQuery('');\r\n \r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddSerial();\r\n    }\r\n  };\r\n\r\n  const handleKeyPress1 = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddSerial1();\r\n    }\r\n  };\r\n\r\n  const handleRemoveSerial = (indexToRemove) => {\r\n    setSerialNumbers(serialNumbers.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  const handleRemoveSerial1 = (serialToRemove) => {\r\n    setSerialNumbers1(serialNumbers1.filter(serial => serial !== serialToRemove));\r\n  };\r\n\r\n  const handleChanges = (e) => {\r\n    setSerialrequired(e.target.value);\r\n  };\r\n\r\n  const options = [\r\n    { value: 'YES', label: 'YES' },\r\n    { value: 'NO', label: 'NO' },\r\n  ];\r\n\r\n  const handleChange11 = (e) => {\r\n    const value = e.target.value;\r\n     if (products.productNames.some(name => name.toLowerCase().includes(value.toLowerCase()))) {\r\n      setQuery(value)\r\n      } else   {\r\n      return\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (name) => {\r\n    fetchProductname(name);\r\n   \r\n    setFilteredProducts([]);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSerialInput1(e.target.value);\r\n  };\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleAddItem = () => {\r\n      // Simulate an add item action\r\n      setShowPopup(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n      setShowPopup(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n      <div className=\"App\">\r\n            \r\n            <AddPopup show={showPopup} onClose={handleClosePopup} message={errmassage}  />\r\n       </div>\r\n        <div className=\"mt-4 lg:w-full\">\r\n          <div className='text-[12px] ml-2 text-red-600'>{errdata?.message} {errdata?.data?.name}</div>\r\n\r\n          <div className=\"bg-[#f2f2f2] grid md:grid-cols-2 text-black px-2 gap-6 md:gap-12 items-center\">\r\n            <div>\r\n              <input\r\n                type='text'\r\n                onChange={handleChange11}\r\n                onKeyPress={handleKeyPress}\r\n                value={query}\r\n                name='productname'\r\n                placeholder='Product'\r\n                className={`px-3 py-1 border-black border-[2px] rounded-md w-[100%] ${formErrors.serialNumbers ? 'border-red-500' : ''}`}\r\n              />\r\n              {formErrors.serialNumbers && <p className=\"text-red-500 text-xs\">{formErrors.serialNumbers}</p>}\r\n              {filteredProducts && (\r\n                <div className='absolute bg-gray-300 px-3 rounded-md'>\r\n                  <div className=\"suggestions\">\r\n                    {filteredProducts.map((name, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"suggestion cursor-pointer\"\r\n                        onClick={() => handleSuggestionClick(name)}\r\n                      >\r\n                        {name}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid md:grid-cols-1 text-black px-2 gap-2 md:gap-3 items-center\">\r\n              <select\r\n                name=\"Serialrequired\"\r\n                onChange={handleChanges}\r\n                value={Serialrequired}\r\n                className={`px-3 py-1 border-black border-[2px] rounded-md ${formErrors.Serialrequired ? 'border-red-500' : ''}`}\r\n              >\r\n                <option value=\"\">Select Serial Requirement</option>\r\n                {options.map((option) => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {formErrors.Serialrequired && <p className=\"text-red-500 text-xs\">{formErrors.Serialrequired}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='mt-2'>\r\n            <div className='flex'>\r\n              <input\r\n                type='text'\r\n                onChange={handleChange}\r\n                onKeyPress={handleKeyPress1}\r\n                value={serialInput1}\r\n                name='serialNumbers'\r\n                placeholder=\"Enter other name\"\r\n                className={`px-3 py-1 w-[100%] border-black border-[2px] rounded-md ${formErrors.serialNumbers1 ? 'border-red-500' : ''}`}\r\n              />\r\n              <button type=\"button\" className='w-[100px]' onClick={handleAddSerial1}>Add Name</button>\r\n            </div>\r\n            {formErrors.serialNumbers1 && <p className=\"text-red-500 text-xs\">{formErrors.serialNumbers1}</p>}\r\n            {serialNumbers1.length > 0 && (\r\n              <div className=\"mt-4\">\r\n                <h2 className=\"font-bold\">other name</h2>\r\n                <ul className=\"grid gap-2 w-[50%] mt-2\">\r\n                  {serialNumbers1.map((serial, idx) => (\r\n                    <li\r\n                      key={idx}\r\n                      className=\"flex gap-2 border-gray-400 border-[1px] rounded-md px-2 items-center justify-between\"\r\n                    >\r\n                      {serial}\r\n                      <button\r\n                        onClick={() => handleRemoveSerial1(serial)}\r\n                        className=\"text-red-500\"\r\n                      >\r\n                        x\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {serialNumbers.length > 0 && (\r\n            <div>\r\n              <h2>Products</h2>\r\n              <ul className='grid grid-cols-4 gap-2 w-[50%]'>\r\n                {serialNumbers.map((serial, index) => (\r\n                  <li key={index} className='flex gap-2 border-gray-400 border-[1px] rounded-md px-2 items-center justify-between'>\r\n                    {serial}\r\n                    <button onClick={() => handleRemoveSerial(index)}>x</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          <div className='flex justify-center mt-5 w-full'>\r\n            <button\r\n              onClick={addpurchase}\r\n              className=\"bg-blue-500 text-white font-bold py-2 px-4 w-[50%] rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n            >\r\n              Add Combo\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["CreateCombo","params","_errdata$data","idsofproduct","setIdsofproduct","useState","errdata","seterrdata","serialInput","setSerialInput","serialInput1","setSerialInput1","serialNumbers","setSerialNumbers","serialNumbers1","setSerialNumbers1","Serialrequired","setSerialrequired","formErrors","setFormErrors","products","setProducts","query","setQuery","filteredProducts","setFilteredProducts","errmassage","seterrmassage","apiKey","useEffect","async","headers","localStorage","getItem","response","axios","get","data","error","console","fetchProducts","productNames","filter","name","toLowerCase","includes","handleAddSerial1","trim","handleSuggestionClick","token","method","log","othername1","prevIds","_id","fetchProductname","showPopup","setShowPopup","handleAddItem","_jsx","_Fragment","children","_jsxs","className","AddPopup","show","onClose","handleClosePopup","message","type","onChange","e","value","target","some","onKeyPress","key","preventDefault","handleAddSerial","placeholder","map","index","onClick","label","option","length","serial","idx","handleRemoveSerial1","serialToRemove","handleRemoveSerial","indexToRemove","_","validateForm","errors","Object","keys","post","othername","success","style","animationDuration"],"sourceRoot":""}