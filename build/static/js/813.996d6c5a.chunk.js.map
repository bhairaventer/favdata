{"version":3,"file":"static/js/813.996d6c5a.chunk.js","mappings":"wKAIe,SAASA,EAAUC,GAChC,MAAMC,EAAS,+BACT,SAAEC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1B,aAAEC,EAAY,cAAEC,IAAkBH,EAAAA,EAAAA,YAAWC,EAAAA,IAE5CG,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,OACpCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAEvCO,EAAAA,EAAAA,YAAU,KACRV,GAAe,GACd,CAACA,IAEJ,MAKMW,EAAqBC,IACzBH,EAAWG,EAAEC,OAAOC,MAAM,EA6CtBC,EAAiBC,IACjBC,OAAOC,QAAQ,kCAfCC,WACpB,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,UACQC,EAAAA,EAAMC,OAAO,GAAG7B,iCAAsCqB,IAAM,CAChES,QAAS,CACP,UAAaL,KAGjBpB,GACF,CAAE,MAAOI,GACPsB,QAAQtB,MAAM,2BAA4BA,EAC5C,GAKEuB,CAAcX,EAChB,EAGF,OAAIZ,GAAcwB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQzB,EAAM0B,WAC9B/B,GAKHgC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CH,UACzDE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDH,SACtD,OAAZ9B,QAAY,IAAZA,OAAY,EAAZA,EAAckC,KAAKC,IAClBH,EAAAA,EAAAA,KAAA,OAEEC,UAAU,2KAA0KH,UAEpLD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,sCAAqCH,SAAA,CACjDjC,EAASuC,SAAW7B,IAAc4B,EAAOE,KACxCR,EAAAA,EAAAA,MAAA,OAAKI,UAAU,qCAAoCH,SAAA,EACjDE,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLvB,MAAON,EACP8B,SAAU3B,EACVqB,UAAU,mGAEZD,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAvEFpB,WACvB,IACE,MACMM,EAAU,CACd,UAFYJ,aAAaC,QAAQ,UAK7BkB,QAAiBjB,EAAAA,EAAMkB,IAAI,GAAG9C,iCAAsCqB,IAAM,CAC9E0B,KAAMlC,GACL,CAAEiB,YAEmB,MAApBe,EAASG,QACXzC,GAAQ0C,GACNA,EAASX,KAAIY,GACXA,EAAST,MAAQpB,EAAK,IAAK6B,EAAUH,KAAMlC,GAAYqC,MAG3DtC,EAAa,MACbP,IACAS,EAAW,KAEXiB,QAAQtB,MAAM,6BAA8BoC,EAASG,OAEzD,CAAE,MAAOvC,GACPsB,QAAQtB,MAAM,2BAA4BA,EAC5C,GA8C+B0C,CAAiBZ,EAAOE,KACvCJ,UAAU,0EAAyEH,SACpF,aAKHD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oDAAmDH,SAAA,EAChEE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCH,SAAEK,EAAOQ,OAC1D9C,EAASuC,UACRJ,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IA3FJL,KACvB3B,EAAa2B,EAAOE,KACpB3B,EAAWyB,EAAOQ,KAAK,EAyFUK,CAAgBb,GAC/BF,UAAU,8EAA6EH,SACxF,YAMNjC,EAASoD,YACRjB,EAAAA,EAAAA,KAAA,UACEQ,QAASA,IAAMxB,EAAcmB,EAAOE,KACpCJ,UAAU,kGAAiGH,SAC5G,eApCAK,EAAOE,YARbL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CH,SAAC,cAsD1E,C","sources":["component/courier/Platform.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DataContext from \"../usecontext/DataContext\";\r\n\r\nexport default function Platform1(params) {\r\n  const apiKey = \"https://bwithf.onrender.com\";\r\n  const { userrole } = useContext(DataContext);\r\n  const { platformdata, fetchplatform } = useContext(DataContext);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchplatform();\r\n  }, [fetchplatform]);\r\n\r\n  const handleEditClick = (person) => {\r\n    setEditingId(person._id);\r\n    setNewName(person.name); // Pre-fill the input with the current name\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleEditSubmit = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = {\r\n        'authtoken': token\r\n      };\r\n\r\n      const response = await axios.put(`${apiKey}/api/Platform/updateplatform/${id}`, {\r\n        name: newName,\r\n      }, { headers });\r\n\r\n      if (response.status === 200) {\r\n        setData(prevData =>\r\n          prevData.map(platform =>\r\n            platform._id === id ? { ...platform, name: newName } : platform\r\n          )\r\n        );\r\n        setEditingId(null);\r\n        fetchplatform();\r\n        setNewName('');\r\n      } else {\r\n        console.error('Failed to update platform:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating platform:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      await axios.delete(`${apiKey}/api/Platform/deleteplatform/${id}`, {\r\n        headers: {\r\n          'authtoken': token\r\n        },\r\n      });\r\n      fetchplatform();\r\n    } catch (error) {\r\n      console.error('Error deleting platform:', error);\r\n    }\r\n  };\r\n\r\n  const confirmDelete = (id) => {\r\n    if (window.confirm(\"Do you really want to delete?\")) {\r\n      deleteProduct(id);\r\n    }\r\n  };\r\n\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!platformdata) {\r\n    return <div className=\"flex justify-center items-center min-h-screen\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-5  h-[500px] overflow-y-scroll\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {platformdata?.map((person) => (\r\n          <div\r\n            key={person._id}\r\n            className=\"relative bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 p-6 rounded-lg shadow-2xl transform transition-transform duration-500 hover:scale-105 hover:shadow-2xl\"\r\n          >\r\n            <div className=\"flex flex-row items-start space-y-4\">\r\n              {userrole.canEdit && editingId === person._id ? (\r\n                <div className=\"w-full flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={handleInputChange}\r\n                    className=\"border-gray-300 px-3 py-2 font-semibold text-center border-b-2 bg-white text-black rounded-md\"\r\n                  />\r\n                  <button\r\n                    onClick={() => handleEditSubmit(person._id)}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded-md\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex justify-between items-center flex-col w-full\">\r\n                  <span className=\"font-semibold text-lg text-white\">{person.name}</span>\r\n                  {userrole.canEdit && (\r\n                    <button\r\n                      onClick={() => handleEditClick(person)}\r\n                      className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-2 rounded-md\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {userrole.canDelete && (\r\n                <button\r\n                  onClick={() => confirmDelete(person._id)}\r\n                  className=\"absolute bottom-2 right-2 bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded-md\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Platform1","params","apiKey","userrole","useContext","DataContext","platformdata","fetchplatform","data","setData","useState","error","setError","editingId","setEditingId","newName","setNewName","useEffect","handleInputChange","e","target","value","confirmDelete","id","window","confirm","async","token","localStorage","getItem","axios","delete","headers","console","deleteProduct","_jsxs","children","message","_jsx","className","map","person","canEdit","_id","type","onChange","onClick","response","put","name","status","prevData","platform","handleEditSubmit","handleEditClick","canDelete"],"sourceRoot":""}