{"version":3,"file":"static/js/830.91dad07d.chunk.js","mappings":"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","sources":["component/orderitem/createorderpage.js","component/orderitem/importfile.js","component/orderitem/createorder.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport DataContext from '../usecontext/DataContext';\r\n\r\nexport default function Createorderpage() {\r\n   const apiKey = \"https://bwithf.onrender.com\"\r\n \r\n  const [productdata, setProductData] = useState({\r\n    Platform: \"\",\r\n    OrderId: \"\",\r\n    Product: \"\",\r\n    Quntity: \"\",\r\n    TransferPrice: \"\",\r\n    SalesAmount: \"\",\r\n    Tax: \"\",\r\n    Paymentmode: \"\",\r\n    Address: \"\",\r\n    Pincode: \"\",\r\n    State: \"\",\r\n    MobNo: \"\",\r\n    Dispatchbydate: \"\",\r\n    orderdate: \"\"\r\n  });\r\n\r\n  const { products,fetchProducts,    fetchcomboProducts,    comboProducts } = useContext(DataContext);\r\n  const [query, setQuery] = useState('');\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showproduct, setshowproduct] = useState(false);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const fetchProductname = async (name) => {\r\n    let token = localStorage.getItem('token')\r\n    try {\r\n      const response = await axios.get(`${apiKey}/api/product/fetchsingleproduct/${name}`,{method: 'GET',\r\n        headers:{\r\n             \r\n            'authtoken': token\r\n        },\r\n       });\r\n      setQuery(response?.data?.othername1?.name);\r\n      setshowproduct(false)\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts()\r\n    fetchcomboProducts()\r\n  }, [ ])\r\n\r\n  const fetchcomboProductname = async (name) => {\r\n    let token =localStorage.getItem('token')\r\n    try {\r\n      const response = await axios.get(`${apiKey}/api/combo/fetchsinglecombo/${name}`,{method: 'GET',\r\n        headers:{\r\n             \r\n            'authtoken': token\r\n        },\r\n       });\r\n      setQuery(response?.data?.othername1?.name);\r\n      setshowproduct(false)\r\n      //console.log(response?.data?.othername1?.name);\r\n    } catch (error) {\r\n      console.error('Error fetching combo products:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n   \r\n    let productNames = products?.productNames?.concat(comboProducts);\r\n    if (query) {\r\n      setFilteredProducts(productNames.filter(name =>\r\n        name.toLowerCase().includes(query.toLowerCase())\r\n      ));\r\n    } else {\r\n      setFilteredProducts([]);\r\n    }\r\n  }, [query, products, comboProducts]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProductData(prevData => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSuggestionClick = (name) => {\r\n    if (name.includes(\"+\")) {\r\n      fetchcomboProductname(name);\r\n    } else {\r\n      fetchProductname(name);\r\n    }\r\n    setFilteredProducts([]);\r\n  };\r\n\r\n\r\n   //console.log(productdata)\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!productdata.Platform) errors.Platform = \"Platform is required\";\r\n    if (!productdata.OrderId) errors.OrderId = \"Order ID is required\";\r\n    if (!query) errors.Product = \"Product is required\";\r\n    if (!productdata.Quntity || isNaN(productdata.Quntity)) errors.Quntity = \"Quantity must be a number\";\r\n    if (!productdata.TransferPrice || isNaN(productdata.TransferPrice)) errors.TransferPrice = \"Transfer Price must be a number\";\r\n    if (!productdata.SalesAmount || isNaN(productdata.SalesAmount)) errors.SalesAmount = \"Sales Amount must be a number\";\r\n    if (!productdata.Tax || isNaN(productdata.Tax)) errors.Tax = \"Tax must be a number\";\r\n    if (!productdata.Paymentmode) errors.Paymentmode = \"Payment mode is required\";\r\n    if (!productdata.Address) errors.Address = \"Address is required\";\r\n    if (!productdata.Pincode || isNaN(productdata.Pincode)) errors.Pincode = \"Pincode must be a number\";\r\n    if (!productdata.State) errors.State = \"State is required\";\r\n    if (!productdata.MobNo || isNaN(productdata.MobNo)) errors.MobNo = \"Mobile No must be a number\";\r\n    if (!productdata.Dispatchbydate) errors.Dispatchbydate = \"Dispatch by date is required\";\r\n    if (!productdata.orderdate) errors.orderdate = \"Order date is required\";\r\n    return errors;\r\n  };\r\n\r\n  const addProduct = async () => {\r\n    const errors = validateForm();\r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return;\r\n    }\r\n    try {\r\n      let {\r\n        Platform, OrderId, Quntity, TransferPrice, SalesAmount,\r\n        Tax, Paymentmode, Address, Pincode, State, MobNo, Dispatchbydate, orderdate\r\n      } = productdata;\r\n\r\n      Platform = Platform.toString();\r\n      OrderId = OrderId.toString();\r\n      Quntity = Quntity.toString();\r\n      TransferPrice = TransferPrice.toString();\r\n      SalesAmount = SalesAmount.toString();\r\n      Tax = Tax.toString();\r\n      Paymentmode = Paymentmode.toString();\r\n      Address = Address.toString();\r\n      Pincode = Pincode.toString();\r\n      State = State.toString();\r\n \r\n      MobNo = MobNo.toString();\r\n      Dispatchbydate = Dispatchbydate.toString();\r\n\r\n      let token = localStorage.getItem('token');\r\n      await axios.post(\r\n        `${apiKey}/api/order/addorders`,\r\n        {\r\n          Platform, OrderId, Product: query, Quntity, status: \"neworder\", TransferPrice, SalesAmount, orderdate,\r\n          Tax, Paymentmode, Address, Pincode, State, MobNo, Dispatchbydate\r\n        },\r\n        {\r\n          headers: { \"authtoken\": token }\r\n        }\r\n      ).then(response => console.log(\"response.data\"))\r\n        .catch(err => console.log(err));\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlatform();\r\n  }, []);\r\n\r\n  const fetchPlatform = () => {\r\n    let token = localStorage.getItem('token')\r\n    axios.get(`${apiKey}/api/Platform/fetchallPlatform`,{method: 'GET',\r\n      headers:{\r\n           \r\n          'authtoken': token\r\n      },\r\n     })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setData(response.data);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChangeproduct = (e) => {\r\n    setQuery(e.target.value);\r\n    setshowproduct(true);\r\n};\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-2\">Create Order</h1>\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Order Date</label>\r\n            <input type=\"date\" name=\"orderdate\" onChange={handleChange} value={productdata.orderdate} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.orderdate && <p className=\"text-red-500 text-xs mt-1\">{formErrors.orderdate}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Platform</label>\r\n            <select name=\"Platform\" onChange={handleChange} value={productdata.Platform} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\">\r\n              <option value=\"\">Select Platform</option>\r\n              {data.map(option => (\r\n                <option key={option._id} value={option._id}>{option.name}</option>\r\n              ))}\r\n            </select>\r\n            {formErrors.Platform && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Platform}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Order ID</label>\r\n            <input type=\"text\" name=\"OrderId\" onChange={handleChange} value={productdata.OrderId} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.OrderId && <p className=\"text-red-500 text-xs mt-1\">{formErrors.OrderId}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2 relative\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Product</label>\r\n            <input type=\"text\" onChange={e => handleChangeproduct(e)} value={query} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" placeholder=\"Search product\" />\r\n            {showproduct && (\r\n              <div className={`absolute bg-white border border-gray-300 rounded-md mt-1 h-[200px] overflow-scroll w-full z-10`}>\r\n                {filteredProducts.map((name, index) => (\r\n                  <div key={index} className=\"p-2 cursor-pointer hover:bg-gray-100\" onClick={() => handleSuggestionClick(name)}>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {formErrors.Product && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Product}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Quantity</label>\r\n            <input type=\"text\" name=\"Quntity\" onChange={handleChange} value={productdata.Quntity} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Quntity && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Quntity}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Transfer Price</label>\r\n            <input type=\"text\" name=\"TransferPrice\" onChange={handleChange} value={productdata.TransferPrice} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.TransferPrice && <p className=\"text-red-500 text-xs mt-1\">{formErrors.TransferPrice}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sales Amount</label>\r\n            <input type=\"text\" name=\"SalesAmount\" onChange={handleChange} value={productdata.SalesAmount} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.SalesAmount && <p className=\"text-red-500 text-xs mt-1\">{formErrors.SalesAmount}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tax</label>\r\n            <input type=\"text\" name=\"Tax\" onChange={handleChange} value={productdata.Tax} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Tax && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Tax}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Payment Mode</label>\r\n            <input type=\"text\" name=\"Paymentmode\" onChange={handleChange} value={productdata.Paymentmode} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Paymentmode && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Paymentmode}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\r\n            <input type=\"text\" name=\"Address\" onChange={handleChange} value={productdata.Address} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Address && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Address}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Pincode</label>\r\n            <input type=\"text\" name=\"Pincode\" onChange={handleChange} value={productdata.Pincode} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Pincode && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Pincode}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">State</label>\r\n            <input type=\"text\" name=\"State\" onChange={handleChange} value={productdata.State} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.State && <p className=\"text-red-500 text-xs mt-1\">{formErrors.State}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Mobile No</label>\r\n            <input type=\"text\" name=\"MobNo\" onChange={handleChange} value={productdata.MobNo} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.MobNo && <p className=\"text-red-500 text-xs mt-1\">{formErrors.MobNo}</p>}\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Dispatch By Date</label>\r\n            <input type=\"date\" name=\"Dispatchbydate\" onChange={handleChange} value={productdata.Dispatchbydate} className=\"w-full px-3 py-2 border border-gray-300 rounded-md\" />\r\n            {formErrors.Dispatchbydate && <p className=\"text-red-500 text-xs mt-1\">{formErrors.Dispatchbydate}</p>}\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"flex justify-center mt-5\">\r\n          <button\r\n            onClick={addProduct}\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n          >\r\n            Add Order\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport { CiImport } from \"react-icons/ci\";\r\n\r\nexport default function Importfile(params) {\r\n    const [data, setData] = useState([]);\r\n    const [data2, setData2] = useState([]);\r\n    const [existingProducts, setExistingProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n     const apiKey = \"https://bwithf.onrender.com\"\r\n  \r\n    const handleFileUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            const binaryStr = event.target.result;\r\n            const workbook = XLSX.read(binaryStr, { type: 'binary' });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n            let jsonData = XLSX.utils.sheet_to_json(sheet);\r\n\r\n            jsonData = jsonData.map(row => {\r\n                const newRow = {};\r\n                Object.entries(row).forEach(([key, value]) => {\r\n                    const newKey = key.replace(/ /g, '_').replace(/&/g, '').replace(/\\./g, '');\r\n                    newRow[newKey] = value;\r\n                });\r\n                return newRow;\r\n            });\r\n\r\n            const formatDate = (serialDate) => {\r\n                if (serialDate == null || isNaN(serialDate)) return '';\r\n                try {\r\n                    const date = XLSX.SSF.parse_date_code(serialDate);\r\n                    if (!date) return '';\r\n                    const d = new Date(date.y, date.m - 1, date.d);\r\n                    const month = (d.getMonth() + 1).toString().padStart(2, '0');\r\n                    const day = d.getDate().toString().padStart(2, '0');\r\n                    const year = d.getFullYear();\r\n                    return `${month}/${day}/${year}`;\r\n                } catch (error) {\r\n                    console.error('Date parsing error:', error);\r\n                    return '';\r\n                }\r\n            };\r\n\r\nconsole.log(jsonData)\r\n\r\n\r\n             const convertedData = jsonData.map(item => ({\r\n                Platform:  item.platform,\r\n                OrderId: item.Order_Id,\r\n                Product: item.Product,\r\n                TransferPrice: Number(item.Price_inc_FKMP_Contribution_Subsidy),\r\n                Salesamount: Number(item.Invoice_Amount),\r\n                Quntity: Number(item.Quantity),\r\n                Tax: item.IGST ? `IGST ${item.IGST}%` : 'NA',\r\n                Paymentmode: '',\r\n                Address: `${item.Address_Line_1 || ''}, ${item.Address_Line_2 || ''}`,\r\n                Pincode: Number(item.PIN_Code),\r\n                 State: item.State,\r\n                Dispatchbydate: formatDate(item.Dispatch_by_date),\r\n                Deliverybydate: formatDate(item.Dispatch_After_date),\r\n                shippingcharge: item.Shipping_and_Handling_Charges,\r\n                shipdate: item.Ordered_On ? formatDate(item.Ordered_On) : '',\r\n                 Billno: item.Invoice_No,\r\n                Billdate: formatDate(item.Invoice_Date ),\r\n                orderdate: formatDate(item.Ordered_On),\r\n                trackingnumber: item.Tracking_ID,\r\n                status: \"neworder\"\r\n            }));\r\n\r\n            showdata(convertedData);\r\n            setData(convertedData);\r\n\r\n          };\r\n\r\n        reader.readAsBinaryString(file);\r\n    };\r\n\r\n\r\n\r\n     const handleFileUpload2 = (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            const binaryStr = event.target.result;\r\n            const workbook = XLSX.read(binaryStr, { type: 'binary' });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n            let jsonData = XLSX.utils.sheet_to_json(sheet);\r\n\r\n            jsonData = jsonData.map(row => {\r\n                const newRow = {};\r\n                Object.entries(row).forEach(([key, value]) => {\r\n                    const newKey = key.replace(/ /g, '_').replace(/&/g, '').replace(/\\./g, '');\r\n                    newRow[newKey] = value;\r\n                });\r\n                return newRow;\r\n            });\r\n\r\n            const formatDate = (serialDate) => {\r\n                if (serialDate == null || isNaN(serialDate)) return '';\r\n                try {\r\n                    const date = XLSX.SSF.parse_date_code(serialDate);\r\n                    if (!date) return '';\r\n                    const d = new Date(date.y, date.m - 1, date.d);\r\n                    const month = (d.getMonth() + 1).toString().padStart(2, '0');\r\n                    const day = d.getDate().toString().padStart(2, '0');\r\n                    const year = d.getFullYear();\r\n                    return `${month}/${day}/${year}`;\r\n                } catch (error) {\r\n                    console.error('Date parsing error:', error);\r\n                    return '';\r\n                }\r\n            };\r\n            //console.log(jsonData)\r\n            const convertedData = jsonData.map(item => ({\r\n               \r\n                 Platform: item.Platform || null,\r\n                OrderId: item.Order_ID,\r\n                Product: item.Product,\r\n                TransferPrice: Number(item.Shipping_Charges),\r\n                Salesamount:  item.Amount,\r\n                Quntity: Number(item.Qty),\r\n                 Paymentmode: item.Payment_Mode || '',\r\n                Address: `${item.Address|| ''},  `,\r\n                Pincode: Number(item.Pincode),\r\n                MobNo: item.MobNo || null,\r\n                State: item.State,\r\n                  Dispatchbydate: formatDate(` `),\r\n                Deliverybydate: formatDate(item.Delivery_Date),\r\n                Condition: item.Order_State,\r\n                shippingcharge: item.Shipping_Charges || 0,\r\n                refundCondition: item.refundCondition || '',\r\n                refunddate: formatDate(new Date()),\r\n                shipdate: item.Ordered_On ? formatDate(item.Ordered_On) : '',\r\n                productdata: item.productdata || null,\r\n                OFDdate: item.OFDdate || '',\r\n                courier: item.Courier || '',\r\n                Billno: item.Bill_No,\r\n                Billdate: formatDate(item.Bill_Date),\r\n                 Lrno: item.LRNo                || '',\r\n                 trackingnumber: item.Tracking_ID,\r\n                status: \"neworder\"\r\n            }));\r\n\r\n            showdata(convertedData);\r\n        };\r\n\r\n        reader.readAsBinaryString(file);\r\n    };\r\nconsole.log(existingProducts)\r\n    const fetchProductname = async (name) => {\r\n        let token = localStorage.getItem('token')\r\n        try {\r\n            const response = await axios.get(`${apiKey}/api/product/fetchsingleproduct/${encodeURIComponent(name)}`,{method: 'GET',\r\n                headers:{\r\n                     \r\n                    'authtoken': token\r\n                },\r\n               });\r\n            return response?.data?.othername1?.name || null;\r\n        } catch (error) {\r\n            console.error('Error fetching product:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchcomboProductname = async (name) => {\r\n        try {\r\n            let token = localStorage.getItem('token')\r\n            const response = await axios.get(`${apiKey}/api/combo/fetchsinglecombo/${encodeURIComponent(name)}`,{method: 'GET',\r\n                headers:{\r\n                     \r\n                    'authtoken': token\r\n                },\r\n               });\r\n            return response?.data?.othername1?.name || null;\r\n        } catch (error) {\r\n            console.error('Error fetching combo product:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchplatform = async (name) => {\r\n        let token = localStorage.getItem('token')\r\n        try {\r\n            const response = await axios.get(`${apiKey}/api/platform/fetchplatform/${encodeURIComponent(name)}`,{method: 'GET',\r\n                headers:{\r\n                     \r\n                    'authtoken': token\r\n                },\r\n               });\r\n              return response?.data?._id  || null;\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching platform:', error.message);\r\n            // Optionally log more details\r\n            console.error('Error config:', error.config);\r\n            \r\n            return null;\r\n        }\r\n    };\r\n    \r\n\r\n  \r\n\r\n    const checkProductExists = async (product) => {\r\n        if (!product) {\r\n            console.warn('Product is undefined or null');\r\n            return null;\r\n        }\r\n    \r\n        const productName = await fetchProductname(product);\r\n        const comboProductName = await fetchcomboProductname(product);\r\n    \r\n        return productName || comboProductName;\r\n    };\r\n    \r\n\r\n\r\n\r\n\r\n    const checkPlatformExists = async (platform) => {\r\n        if (!platform) {\r\n            console.warn('Platform is undefined or null');\r\n            return null;\r\n        }\r\n  \r\n        return await fetchplatform(platform);\r\n    };\r\n\r\n    const getExistingProducts = async (data) => {\r\n         const existingProducts = [];\r\n\r\n        for (const element of data) {\r\n\r\n             if (!element.Product) {\r\n                console.warn('Product is missing in element:', element);\r\n                continue;\r\n            }\r\n            const productName = await checkProductExists(element.Product);\r\n            const platformId = await checkPlatformExists(element.Platform);\r\n\r\n             if (productName) {\r\n                existingProducts.push({\r\n                    ...element,\r\n                    Product: productName,\r\n                    Platform: platformId  \r\n                });\r\n                //console.log(`Product ${productName} exists.`);\r\n            } else {\r\n                console.warn(`Product ${element.Product} does not exist.`);\r\n            }\r\n        }\r\n\r\n        return existingProducts;\r\n    };\r\n\r\n    const showdata = async (data) => {\r\n        try {\r\n            setLoading(true);\r\n            const existingProducts = await getExistingProducts(data);\r\n            setExistingProducts(existingProducts);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.error('Error in showdata:', err);\r\n            setError(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const addOrder = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const config = {\r\n                headers: { 'authtoken': token }\r\n            };\r\n            await axios.post(`${apiKey}/api/order/addmultiorders`, existingProducts, config);\r\n            alert(\"Data Added Successfully\");\r\n        } catch (err) {\r\n            console.error('Error adding order:', err);\r\n            alert(\"Error adding data\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Code to execute on component mount if needed\r\n    }, []);\r\n//console.log(existingProducts)\r\n    return (\r\n        <div>\r\n            <h2>Import File</h2>\r\n            <input type=\"file\" onChange={handleFileUpload} />\r\n            <input type=\"file\" onChange={handleFileUpload2} />\r\n           {existingProducts.length !== 0 && <button onClick={addOrder}>Add Order</button>}\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p>Error: {error.message}</p>}\r\n            <div className='h-[600px] p-6 border-[1px] border-gray-600 mt-3 rounded-md overflow-y-scroll'>\r\n                <ul className='flex gap-3 flex-wrap'>\r\n                    {existingProducts.map((product, index) => (\r\n                        <li key={index}>{product.Product} - Platform ID: {product.Platform}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport {  Route,Routes } from 'react-router-dom';\r\nimport Createorderpage from \"./createorderpage\";\r\nimport Importfile from \"./importfile\";\r\nimport NotFound from \"../Notfound\";\r\n \r\n\r\n\r\nexport default  function Createorder (params) {\r\n   const apiKey = \"https://bwithf.onrender.com\"\r\n \r\n  document.body.style.backgroundColor =\"#f6f6f6\"\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      const navbar = document.querySelector('.topnavbar');\r\n    const links = navbar.querySelectorAll('.child');\r\n  \r\n        links.forEach((otherLink) => {\r\n          otherLink.style.color = 'white';\r\n          otherLink.style.backgroundColor = '#31344f';\r\n        });\r\n  \r\n        const activeLink = Array.from(links).find(\r\n            (link) => link.getAttribute('href') === location.pathname\r\n        );\r\n  \r\n        if (activeLink) {\r\n           \r\n            activeLink.style.color = 'black';\r\n            activeLink.style.backgroundColor = '#a0afc5';\r\n        }\r\n    }, [location]);\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\" md:w-[85%] lg:w-[90%]  w-[100%] px-[20px] mt-16 \">\r\n         <div className=\"flex justify-between text-white  w-[100%]\">\r\n            <div className=\"lg:text-xl text-lg font-semibold\">Products</div>\r\n            <div className=\"flex lg:space-x-4 lg:text-sm text-[10px] space-x-2\">\r\n                <Link to=\"/\">Dashboard</Link>\r\n                <Link to=\"/home/reports\">Reports</Link>\r\n                <div> </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"bg-[white] rounded-md mt-2 px-3 py-6\">\r\n            <div className=\"bg-[#31344f] flex gap-2 text-white p-3 rounded-md flex-wrap topnavbar\">\r\n                <Link to='' className=\"rounded-full text-black cursor-pointer child bg-[#a0afc5] px-2\">create order</Link>\r\n               <Link to='./importorder' className=\"rounded-full text-black cursor-pointer child bg-[#a0afc5] px-2\">import orders</Link>\r\n                 {/* <Link to='./create-product' className=\"rounded-full px-2 child cursor-pointer\">Create Product</Link>\r\n                <Link to='./create-Purchase' className=\"rounded-full px-2 child cursor-pointer\">Create Purchase</Link> */}\r\n               \r\n              </div>\r\n\r\n        \r\n\r\n         \r\n       \r\n\r\n\r\n                     \r\n          \r\n   \r\n        <Routes>\r\n          <Route path=\"/\" element={<Createorderpage />} />\r\n          <Route path=\"importorder\" element={<Importfile />} />\r\n          <Route path='*' element={<NotFound />} />\r\n\r\n         </Routes>\r\n  \r\n\r\n      <style jsx>{`\r\n        .scroll-container::-webkit-scrollbar {\r\n          width: 10px;\r\n          height: 10px;\r\n         \r\n         }\r\n        .scroll-container::-webkit-scrollbar-track {\r\n          background: white;\r\n          border: 1px #888888 solid\r\n         }\r\n        .scroll-container::-webkit-scrollbar-thumb {\r\n          background: #888;\r\n          border-radius: 10px\r\n        }\r\n        .scroll-container::-webkit-scrollbar-thumb:hover {\r\n          background: #555;\r\n        }\r\n      `}</style>\r\n  \r\n         </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Createorderpage","apiKey","productdata","setProductData","useState","Platform","OrderId","Product","Quntity","TransferPrice","SalesAmount","Tax","Paymentmode","Address","Pincode","State","MobNo","Dispatchbydate","orderdate","products","fetchProducts","fetchcomboProducts","comboProducts","useContext","DataContext","query","setQuery","filteredProducts","setFilteredProducts","data","setData","loading","setLoading","error","setError","showproduct","setshowproduct","formErrors","setFormErrors","useEffect","_products$productName","productNames","concat","filter","name","toLowerCase","includes","handleChange","e","value","target","prevData","handleSuggestionClick","async","token","localStorage","getItem","_response$data2","_response$data2$other","response","axios","get","method","headers","othername1","console","fetchcomboProductname","_response$data","_response$data$othern","fetchProductname","fetchPlatform","then","catch","_jsxs","className","children","_jsx","type","onChange","map","option","_id","handleChangeproduct","placeholder","index","onClick","errors","validateForm","isNaN","Object","keys","length","toString","post","status","log","err","Importfile","params","data2","setData2","existingProducts","setExistingProducts","checkProductExists","product","warn","productName","encodeURIComponent","comboProductName","checkPlatformExists","platform","_response$data3","message","config","fetchplatform","showdata","element","platformId","push","getExistingProducts","file","files","reader","FileReader","onload","event","binaryStr","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","jsonData","sheet_to_json","row","newRow","entries","forEach","_ref","key","newKey","replace","formatDate","serialDate","date","parse_date_code","d","Date","y","m","month","getMonth","padStart","day","getDate","getFullYear","convertedData","item","Order_Id","Number","Price_inc_FKMP_Contribution_Subsidy","Salesamount","Invoice_Amount","Quantity","IGST","Address_Line_1","Address_Line_2","PIN_Code","Dispatch_by_date","Deliverybydate","Dispatch_After_date","shippingcharge","Shipping_and_Handling_Charges","shipdate","Ordered_On","Billno","Invoice_No","Billdate","Invoice_Date","trackingnumber","Tracking_ID","readAsBinaryString","_ref2","Order_ID","Shipping_Charges","Amount","Qty","Payment_Mode","Delivery_Date","Condition","Order_State","refundCondition","refunddate","OFDdate","courier","Courier","Bill_No","Bill_Date","Lrno","LRNo","alert","Createorder","document","body","style","backgroundColor","location","useLocation","links","querySelector","querySelectorAll","otherLink","color","activeLink","Array","from","find","link","getAttribute","pathname","_Fragment","Link","to","Routes","Route","path","NotFound","jsx"],"sourceRoot":""}