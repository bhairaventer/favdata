{"version":3,"file":"static/js/655.a187edd1.chunk.js","mappings":"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","sources":["component/orderitem/Shipped.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { MdEdit ,MdDelete ,MdOutlineSystemSecurityUpdate } from \"react-icons/md\";\r\nimport DataContext from \"../usecontext/DataContext\";\r\nimport { FaArrowAltCircleLeft,FaArrowAltCircleRight } from \"react-icons/fa\";\r\n\r\nexport default  function Shipped (params) {\r\n\r\n    const { updateOrderStatus ,setsingleorderid,userrole} = useContext(DataContext);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n    const [id, setid] = useState('');\r\n    const [showpopup, setshowpopup] = useState(false);\r\n    const {setexceldata} = useContext(DataContext);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalOrder, settotalOrder] = useState(\"\");\r\n   const [hasMore, setHasMore] = useState(true); // To track if there are more items to load\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    let [productdata, setproductdata] = useState({   billno:\"\", billdate:\"\", LRNO:\"\" ,shippingcharges:\"\" ,Trackingid:\"\" ,Courier:\"\",   Deliverybydate:\"\"})\r\n \r\n     const apiKey = \"https://backend-mqr6.onrender.com\"\r\n \r\n    useEffect(() => {\r\n      fetchproduct(currentPage);\r\n     }, [ ]);\r\n    \r\n   \r\n  \r\n   \r\n    const Previous = () => {\r\n      if (currentPage > 1) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage - 1;\r\n  \r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n    const Next = () => {\r\n      //console.log(hasMore)\r\n     if( Math.ceil(totalOrder/10)){}\r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage + 1;\r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n    const numclick = (number) => {\r\n       \r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = number\r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n \r\n\r\n    const fetchproduct = async (page) => {\r\n      //console.log(page, \"this is my fetching page\");\r\n    \r\n      try {\r\n        let token = localStorage.getItem('token')\r\n        const response = await axios.get(`${apiKey}/api/order/fetchallordersforadmin/Shipped/${page}`,{method: 'GET',\r\n          headers:{\r\n               \r\n              'authtoken': token\r\n          },\r\n         });\r\n        settotalOrder(response.data.totalOrder)\r\n  \r\n        if (response.data.orders.length === 0) {\r\n          setHasMore(false); // No more data to load\r\n          setData(response.data);\r\n  \r\n         } else {\r\n          // setData(prevData => ({\r\n          //   ...prevData,\r\n          //   orders: [...prevData.orders, ...response.data.orders]\r\n          // }));\r\n          \r\n          await setexceldata(response?.data?.orders);\r\n          setData(response.data);\r\n          setHasMore(true); \r\n         }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n\r\n\r\n    const range = (start, end, step = 1) => {\r\n      const result = [];\r\n      for (let i = start; i < end; i += step) {\r\n        result.push(i);\r\n      }\r\n      return result;\r\n    };\r\n    \r\n    \r\n    const totalPages = Math.ceil(totalOrder / 10);\r\n    const containerRef = useRef(null);\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n    const pageWidth = 50; \r\n    const scrollLeft = () => {\r\n      if (containerRef.current) {\r\n        const newPosition = scrollPosition - pageWidth;\r\n        setScrollPosition(newPosition);\r\n        containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n      }\r\n    };\r\n    \r\n    const scrollRight = () => {\r\n      if (containerRef.current) {\r\n        const newPosition = scrollPosition + pageWidth;\r\n        setScrollPosition(newPosition);\r\n        containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n      }\r\n    };\r\n\r\n\r\n\r\n    const [openItemId, setOpenItemId] = useState(null);\r\n\r\n    const toggleOpen = (id) => {\r\n      setOpenItemId((prevId) => (prevId === id ? null : id));\r\n    };\r\n \r\n let changestatus =(status,iddata)=>{\r\n    setSelectedStatus(status)\r\n    setid(iddata)\r\n    setshowpopup(true)\r\n  }\r\n  let update =async(status,id)=>{\r\n     await updateOrderStatus(status,id,productdata)\r\n     fetchproduct(currentPage)\r\n    }   \r\n\r\n    return(\r\n        <>\r\n        <div className=\" \">\r\n        \r\n         <div className=\"  mt-3 w-[1520px] h-[510px]\">\r\n            <div className=\"bg-[#464646] flex sticky top-3 z-20  text-white mb-2  px-2 items-center lg: \">\r\n                 <div className=\"  w-[100px]  px-3 py-1 \">Bill No</div>\r\n                <div className=\"border-l-[1px] border-white w-[110px]  px-3 py-1 \">Order Id</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Product</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Quntity</div>\r\n                <div className=\"border-l-[1px] border-white w-[150px]  px-3 py-1 \">Amount</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">State</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Platform</div>\r\n                <div className=\"border-l-[1px] border-white w-[180px]  px-3 py-1 \">Dispatch by date</div>\r\n                <div className=\"border-l-[1px] border-white w-[180px]  px-3 py-1 \">Courier</div>\r\n                <div className=\"border-l-[1px] border-white w-[140px]  px-3 py-1 \">Tracking ID</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">LR NO.</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Ship date.</div>\r\n\r\n            </div>\r\n            {data?.orders?.map((person) => {\r\n \r\n const bdate = new Date(person.Billdate);\r\n const boptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet Billdate = bdate.toLocaleDateString('en-IN', boptions);\r\nBilldate = Billdate.split('/').join('-');\r\n\r\n\r\nconst Dispatch = new Date(person.Dispatchbydate);\r\nconst doptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet Dispatchdate = Dispatch.toLocaleDateString('en-IN', doptions);\r\nDispatchdate = Dispatchdate.split('/').join('-');\r\n\r\n\r\nconst shipdate1 = new Date(person.shipdate);\r\nconst dioptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet shipdate = shipdate1.toLocaleDateString('en-IN', dioptions);\r\nshipdate = shipdate.split('/').join('-');\r\n\r\n return (\r\n            <div   key={person._id}\r\n            className=\"bg-[#f2f2f2] flex   text-black   px-2 items-center \">\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{Billdate}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[110px] overflow-x-auto px-3 py-1 \">{person.OrderId}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Product}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Quntity}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[150px] overflow-x-auto px-3 py-1 \">{person.Salesamount}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.State}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Platform.name}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[180px] overflow-x-auto px-3 py-1 \">{Dispatchdate}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[180px] overflow-x-auto px-3 py-1 \">{person.courier}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[140px] overflow-x-auto px-3 py-1 \">{person.trackingnumber}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Lrno}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{shipdate}</Link>\r\n\r\n                { openItemId === person._id &&<div className=\" sticky right-0 flex gap-2     z-10\">\r\n          <div className=\" top-[-19px]  absolute right-28  bg-white  border-black border-[1px] p-2  \">\r\n      \r\n\r\n\r\n<div className=\"opstion  \">\r\n      \r\n        <option className={`text-[12px] cursor-pointer ${selectedStatus==\"OFD\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"OFD\",person._id)}} value=\"pending\">OFD</option>\r\n         <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Cancel\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Cancel\",person._id)}} value=\"canceled\">Cancel</option>\r\n         <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Not Sent\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Not Sent\",person._id)}} value=\"Not Sent\">Not Sent</option>\r\n    \r\n    </div>\r\n    <div className=\"flex justify-center mt-1\">\r\n      <button className=\"text-[10px] bg-blue-600 rounded-full   items-center   text-white px-2  \" onClick={()=>{update(selectedStatus,id)}}>Update</button>\r\n    </div> \r\n    </div>\r\n    </div>}\r\n    <div className=\" sticky right-0 flex gap-2  bottom-2 z-10\">\r\n\r\n<div  \r\n  className=\"bg-black rounded-full w-6 h-6 flex justify-center items-center  absolute bottom-3 right-16 text-white     text-[16px]  \"\r\n  onClick={() => toggleOpen(person._id)}\r\n >\r\n <MdOutlineSystemSecurityUpdate  />   \r\n</div>\r\n \r\n</div>\r\n            </div>)})}\r\n            \r\n        \r\n         </div>\r\n         <div className=\"    absolute md:w-[80%]  lg:w-[85%]   w-[90%] mt-10    \">\r\n        <div className=\"text-white w-[100%] pb-5 flex gap-10 justify-center \">\r\n          {currentPage !== 1 ?<button   onClick={()=>{Previous()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>:\r\n          <button disabled  onClick={()=>{Previous()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>}\r\n<div className=\"text-black border-black border-[1px] px-2 rounded-md\">{currentPage}</div>\r\n         { currentPage !== Math.ceil(totalOrder/10) ? <button onClick={()=>{Next()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>:\r\n          <button disabled onClick={()=>{Next()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>}\r\n        </div>\r\n        <div className=\"w-[100%] pb-5 flex gap-10  justify-center \">\r\n        \r\n\r\n        <div className=\"flex items-center\">\r\n      {/* Scroll Left Button */}\r\n      <button\r\n        onClick={scrollLeft}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 mb-2 py-1 rounded-md mr-2\"\r\n        disabled={scrollPosition <= 0}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {/* Scroll Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative overflow-x-auto hide-scrollbar\"\r\n        style={{ maxWidth: \"150px\", whiteSpace: \"nowrap\" }}\r\n      >\r\n        <div className=\"flex gap-2\">\r\n          {range(1, totalPages+1).map(number => (\r\n            <div onClick={()=>{numclick(number)}}\r\n              key={number}\r\n              className=\"border-black text-center cursor-pointer border-[1px] px-2\"\r\n              style={{ width: pageWidth }}\r\n            >\r\n              {number}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll Right Button */}\r\n      <button\r\n        onClick={scrollRight}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 mb-2 rounded-md ml-2\"\r\n        disabled={scrollPosition >= (containerRef.current?.scrollWidth - containerRef.current?.clientWidth)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Shipped","params","_data$orders","_containerRef$current","_containerRef$current2","updateOrderStatus","setsingleorderid","userrole","useContext","DataContext","selectedStatus","setSelectedStatus","useState","id","setid","showpopup","setshowpopup","setexceldata","currentPage","setCurrentPage","totalOrder","settotalOrder","hasMore","setHasMore","loading","setLoading","data","setData","error","setError","productdata","setproductdata","billno","billdate","LRNO","shippingcharges","Trackingid","Courier","Deliverybydate","useEffect","fetchproduct","Previous","prevPage","newPage","Next","Math","ceil","async","token","localStorage","getItem","response","axios","get","page","method","headers","_response$data","orders","length","totalPages","containerRef","useRef","scrollPosition","setScrollPosition","openItemId","setOpenItemId","changestatus","status","iddata","_jsx","_Fragment","children","_jsxs","className","map","person","Billdate","Date","toLocaleDateString","year","month","day","split","join","Dispatchdate","Dispatchbydate","shipdate","Link","to","onClick","_id","OrderId","Product","Quntity","Salesamount","State","Platform","name","courier","trackingnumber","Lrno","value","update","prevId","toggleOpen","MdOutlineSystemSecurityUpdate","FaArrowAltCircleLeft","disabled","FaArrowAltCircleRight","scrollLeft","current","newPosition","scrollTo","left","behavior","ref","style","maxWidth","whiteSpace","start","end","step","arguments","undefined","result","i","push","range","number","numclick","width","scrollRight","scrollWidth","clientWidth"],"sourceRoot":""}