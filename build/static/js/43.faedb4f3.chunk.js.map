{"version":3,"file":"static/js/43.faedb4f3.chunk.js","mappings":"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","sources":["component/orderitem/notsent.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { MdEdit ,MdDelete ,MdOutlineSystemSecurityUpdate } from \"react-icons/md\";\r\nimport DataContext from \"../usecontext/DataContext\";\r\nimport { FaArrowAltCircleLeft,FaArrowAltCircleRight } from \"react-icons/fa\";\r\n\r\nexport default  function Notsent (params) {\r\n    const { updateOrderStatus ,setsingleorderid,userrole} = useContext(DataContext);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n    const [id, setid] = useState('');\r\n    const [showpopup, setshowpopup] = useState(false);\r\n    const {setexceldata} = useContext(DataContext);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalOrder, settotalOrder] = useState(\"\");\r\n   const [hasMore, setHasMore] = useState(true); // To track if there are more items to load\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n     const apiKey = \"https://bwithf.onrender.com\"\r\n  \r\n    let [productdata, setproductdata] = useState({ refundCondition:\"\",  billno:\"\",refunddate:\"\", billdate:\"\", LRNO:\"\" ,shippingcharges:\"\" ,Trackingid:\"\" ,Courier:\"\",   Deliverybydate:\"\"})\r\n\r\n \r\n\r\n    useEffect(() => {\r\n      fetchproduct(currentPage);\r\n     }, [ ]);\r\n    \r\n   \r\n  \r\n   \r\n    const Previous = () => {\r\n      if (currentPage > 1) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage - 1;\r\n  \r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n    const Next = () => {\r\n      //console.log(hasMore)\r\n     if( Math.ceil(totalOrder/10)){}\r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage + 1;\r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n    const numclick = (number) => {\r\n       \r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = number\r\n          //console.log(newPage)\r\n          fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n   \r\n\r\n    const fetchproduct = async (page) => {\r\n      //console.log(page, \"this is my fetching page\");\r\n    let token = localStorage.getItem('token')\r\n      try {\r\n        const response = await axios.get(`${apiKey}/api/order/fetchallordersforadmin/Not Sent/${page}`,{method: 'GET',\r\n          headers:{\r\n               \r\n              'authtoken': token\r\n          },\r\n         });\r\n        settotalOrder(response.data.totalOrder)\r\n  \r\n        if (response.data.orders.length === 0) {\r\n          setHasMore(false); // No more data to load\r\n          setData(response.data);\r\n  \r\n         } else {\r\n          // setData(prevData => ({\r\n          //   ...prevData,\r\n          //   orders: [...prevData.orders, ...response.data.orders]\r\n          // }));\r\n          \r\n          await setexceldata(response?.data?.orders);\r\n          setData(response.data);\r\n          setHasMore(true); \r\n         }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n\r\n\r\n    const range = (start, end, step = 1) => {\r\n      const result = [];\r\n      for (let i = start; i < end; i += step) {\r\n        result.push(i);\r\n      }\r\n      return result;\r\n    };\r\n    \r\n    \r\n    const totalPages = Math.ceil(totalOrder / 10);\r\n    const containerRef = useRef(null);\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n    const pageWidth = 50; \r\n    const scrollLeft = () => {\r\n      if (containerRef.current) {\r\n        const newPosition = scrollPosition - pageWidth;\r\n        setScrollPosition(newPosition);\r\n        containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n      }\r\n    };\r\n    \r\n    const scrollRight = () => {\r\n      if (containerRef.current) {\r\n        const newPosition = scrollPosition + pageWidth;\r\n        setScrollPosition(newPosition);\r\n        containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n      }\r\n    };\r\n\r\n    const [openItemId, setOpenItemId] = useState(null);\r\n\r\n    const toggleOpen = (id) => {\r\n      setOpenItemId((prevId) => (prevId === id ? null : id));\r\n    };\r\n \r\n let changestatus =(status,iddata)=>{\r\n    setSelectedStatus(status)\r\n    setid(iddata)\r\n    if(status == \"Not Sent\"){\r\n\r\n      setshowpopup(true)\r\n    }\r\n    }\r\n\r\n  let update =async(status,id)=>{\r\n     await updateOrderStatus(status,id,productdata)\r\n     fetchproduct(currentPage)\r\n    }  \r\n\r\n    const handleChange = (e) => {\r\n      setproductdata({\r\n        ...productdata,\r\n        refundCondition: e.target.value,\r\n      });\r\n    };\r\n\r\n\r\n\r\n  const options = [\r\n    { value: 'YES', label: 'YES' },\r\n    { value: 'NO', label: 'NO' },\r\n   ];\r\n   const onchange =(e)=>{\r\n    setproductdata({...productdata,[e.target.name]:[e.target.value]})\r\n  }\r\n  //console.log(productdata)\r\n\r\n    return(\r\n        <>\r\n        <div  className=\" \">\r\n        { showpopup && <div className=\" flex justify-center \">\r\n        <div className=\"w-[60%] bg-white shadow-xl shadow-gray-300 z-20 border-[1px] border-gray-300 py-5 my-6 rounded-md  absolute\">\r\n          <div onClick={()=>{setshowpopup(false)}} className=\"rounded-full cursor-pointer w-6 h-6 inline-block  ml-2  text-center justify-self-center border-black border-[1px] \">\r\n          <div className=\"relative bottom-[7px] text-[20px]\">x\r\n            </div>\r\n            </div>\r\n          <div className=\"flex justify-center py-2\">\r\n            <div>Update some info</div>\r\n          </div>\r\n          <div className=\"grid    md:grid-cols-1 text-black  px-2 gap-2 md:gap-3 items-center\">\r\n\r\n        \r\n       \r\n                \r\n                \r\n        <select\r\n        name=\"refundCondition\"\r\n        onChange={handleChange}\r\n        value={productdata.refundCondition}\r\n        className=\"px-3 py-1 border-black border-[2px] rounded-md\"\r\n      >\r\n        <option value=\"\" disabled>\r\n          Select refundCondition\r\n        </option>\r\n        {options.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n       \r\n\r\n      <div className=\" px-3 py-1 border-black border-[2px] rounded-md flex items-center gap-3\">\r\n                  <div className=\"text-gray-500\">Refunddate:</div>\r\n                <input type='date' name='refunddate' onChange={onchange} value={productdata.refunddate} placeholder='Refund date' /></div>\r\n                \r\n                </div>       \r\n                <div className=\"flex justify-center mt-1\">\r\n      <button className=\"text-[16px] bg-blue-600 rounded-full w-[50%] items-center mt-3  text-white px-2 py-[3px]\" onClick={()=>{update(selectedStatus,id)}}>Update</button>\r\n    </div> \r\n</div>\r\n</div>}\r\n         <div className=\"  mt-3 w-[1300px] h-[510px]\">\r\n            <div className=\"bg-[#464646] flex sticky top-3 z-20  text-white mb-2  px-2 items-center lg: \">\r\n                 <div className=\"  w-[100px]  px-3 py-1 \">Bill No</div>\r\n                <div className=\"border-l-[1px] border-white w-[130px]  px-3 py-1 \">Bill Date</div>\r\n                <div className=\"border-l-[1px] border-white w-[140px]  px-3 py-1 \">Order Id</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Product</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Quntity</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Amount</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">State</div>\r\n                <div className=\"border-l-[1px] border-white w-[150px]  px-3 py-1 \">Platform</div>\r\n                <div className=\"border-l-[1px] border-white w-[180px]  px-3 py-1 \">delivery by date</div>\r\n                \r\n\r\n            </div>\r\n            {data?.orders?.map((person) => {\r\n  const bdate = new Date(person.Billdate);\r\n  const boptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\n let Billdate = bdate.toLocaleDateString('en-IN', boptions);\r\n Billdate = Billdate.split('/').join('-');\r\n\r\n const Deliverybydate1 = new Date(person.Deliverybydate);\r\n const Deliverybydateoptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet Deliverybydate = Deliverybydate1.toLocaleDateString('en-IN', Deliverybydateoptions);\r\nDeliverybydate = Deliverybydate.split('/').join('-');\r\n\r\n return (\r\n            <div  key={person._id} className=\"bg-[#f2f2f2] flex   text-black   px-2 items-center \">\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Billno}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[130px] overflow-x-auto px-3 py-1 \">{Billdate}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[140px] overflow-x-auto px-3 py-1 \">{person.OrderId}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Product}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Quntity}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Salesamount}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.State}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[150px] overflow-x-auto px-3 py-1 \">{person.Platform.name}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)}  className=\" w-[180px] overflow-x-auto px-3 py-1 \">{Deliverybydate}</Link>\r\n                   \r\n                { openItemId === person._id &&<div className=\" sticky right-0 flex gap-2     z-10\">\r\n          <div className=\" top-[-19px]  absolute right-28  bg-white  border-black border-[1px] p-2  \">\r\n      \r\n\r\n\r\n<div className=\"opstion  \">\r\n      \r\n        <option className={`text-[12px] cursor-pointer ${selectedStatus==\"OFD\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"OFD\",person._id)}} value=\"OFD\">OFD</option>\r\n         <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Cancel\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Cancel\",person._id)}} value=\"Cancel\">Cancel</option>\r\n         <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Not Sent\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Not Sent\",person._id)}} value=\"Not Sent\">Condition</option>\r\n    \r\n    </div>\r\n    <div className=\"flex justify-center mt-1\">\r\n     {selectedStatus !== \"Not Sent\" && <button className=\"text-[10px] bg-blue-600 rounded-full   items-center   text-white px-2  \" onClick={()=>{update(selectedStatus,id)}}>Update</button>}\r\n    </div> \r\n    </div>\r\n    </div>}\r\n    <div className=\" sticky right-0 flex gap-2  bottom-2 z-10\">\r\n\r\n<div  \r\n  className=\"bg-black rounded-full w-6 h-6 flex justify-center items-center  absolute bottom-3 right-16 text-white     text-[16px]  \"\r\n  onClick={() => toggleOpen(person._id)}\r\n >\r\n <MdOutlineSystemSecurityUpdate  />   \r\n</div>\r\n \r\n \r\n</div>\r\n            </div>\r\n )})}\r\n        \r\n         </div>\r\n         <div className=\"    absolute md:w-[80%]  lg:w-[85%]   w-[90%] mt-10    \">\r\n        <div className=\"text-white w-[100%] pb-5 flex gap-10 justify-center \">\r\n          {currentPage !== 1 ?<button   onClick={()=>{Previous()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>:\r\n          <button disabled  onClick={()=>{Previous()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>}\r\n<div className=\"text-black border-black border-[1px] px-2 rounded-md\">{currentPage}</div>\r\n         { currentPage !== Math.ceil(totalOrder/10) ? <button onClick={()=>{Next()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>:\r\n          <button disabled onClick={()=>{Next()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>}\r\n        </div>\r\n        <div className=\"w-[100%] pb-5 flex gap-10  justify-center \">\r\n        \r\n\r\n        <div className=\"flex items-center\">\r\n      {/* Scroll Left Button */}\r\n      <button\r\n        onClick={scrollLeft}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 mb-2 py-1 rounded-md mr-2\"\r\n        disabled={scrollPosition <= 0}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {/* Scroll Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative overflow-x-auto hide-scrollbar\"\r\n        style={{ maxWidth: \"150px\", whiteSpace: \"nowrap\" }}\r\n      >\r\n        <div className=\"flex gap-2\">\r\n          {range(1, totalPages+1).map(number => (\r\n            <div onClick={()=>{numclick(number)}}\r\n              key={number}\r\n              className=\"border-black text-center cursor-pointer border-[1px] px-2\"\r\n              style={{ width: pageWidth }}\r\n            >\r\n              {number}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll Right Button */}\r\n      <button\r\n        onClick={scrollRight}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 mb-2 rounded-md ml-2\"\r\n        disabled={scrollPosition >= (containerRef.current?.scrollWidth - containerRef.current?.clientWidth)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Notsent","params","_data$orders","_containerRef$current","_containerRef$current2","updateOrderStatus","setsingleorderid","userrole","useContext","DataContext","selectedStatus","setSelectedStatus","useState","id","setid","showpopup","setshowpopup","setexceldata","currentPage","setCurrentPage","totalOrder","settotalOrder","hasMore","setHasMore","loading","setLoading","data","setData","error","setError","productdata","setproductdata","refundCondition","billno","refunddate","billdate","LRNO","shippingcharges","Trackingid","Courier","Deliverybydate","useEffect","fetchproduct","Previous","prevPage","newPage","Next","Math","ceil","async","token","localStorage","getItem","response","axios","get","page","method","headers","_response$data","orders","length","totalPages","containerRef","useRef","scrollPosition","setScrollPosition","openItemId","setOpenItemId","changestatus","status","iddata","update","_jsx","_Fragment","children","_jsxs","className","onClick","name","onChange","e","target","value","disabled","label","map","option","type","placeholder","person","Billdate","Date","toLocaleDateString","year","month","day","split","join","Link","to","_id","Billno","OrderId","Product","Quntity","Salesamount","State","Platform","prevId","toggleOpen","MdOutlineSystemSecurityUpdate","FaArrowAltCircleLeft","FaArrowAltCircleRight","scrollLeft","current","newPosition","scrollTo","left","behavior","ref","style","maxWidth","whiteSpace","start","end","step","arguments","undefined","result","i","push","range","number","numclick","width","scrollRight","scrollWidth","clientWidth"],"sourceRoot":""}