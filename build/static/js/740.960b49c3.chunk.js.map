{"version":3,"file":"static/js/740.960b49c3.chunk.js","mappings":"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","sources":["component/Dashboard.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n\r\n\r\n\r\nexport default  function Dashboard (params) {\r\n   document.body.style.backgroundColor =\"#f6f6f6\"\r\n \r\n\r\nconst [products, setProducts] = useState([]);\r\nconst [statedata, setstate] = useState([]);\r\nconst [pincode, setpincode] = useState([]);\r\nconst [totaldata, settotaldata] = useState({});\r\n const apiKey = \"https://bwithf.onrender.com\"\r\n  \r\nconst getAuthToken = () => localStorage.getItem(\"token\");\r\n\r\n// Set headers for Axios requests\r\nconst getHeaders = () => ({\r\n    headers: { 'authtoken': getAuthToken() }\r\n});\r\n\r\nuseEffect(() => {\r\n    const fetchTopProducts = async () => {\r\n        try {\r\n            const response = await axios.get(`${apiKey}/api/product/top5products`, getHeaders());\r\n            setProducts(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching top products\", error);\r\n        }\r\n    };\r\n\r\n    const fetchTopStates = async () => {\r\n        try {\r\n            const response = await axios.get(`${apiKey}/api/order/top5states`, getHeaders());\r\n            setstate(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching top states\", error);\r\n        }\r\n    };\r\n\r\n    const fetchTopPincode = async () => {\r\n        try {\r\n            const response = await axios.get(`${apiKey}/api/order/top5pincode/rto-dto`, getHeaders());\r\n            setpincode(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching top pincode\", error);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    \r\n    fetchTopProducts();\r\n    fetchTopStates();\r\n    totalorders();\r\n    fetchTopPincode();\r\n}, []);\r\n\r\nconst totalorders = async (startDate = \"\", endDate = \"\") => {\r\n  try {\r\n    // Define headers including the auth token\r\n    const headers = {\r\n      'authtoken': localStorage.getItem(\"token\")\r\n    };\r\n\r\n    // Construct the URL with query parameters\r\n    const response = await axios.get(`${apiKey}/api/order/totalorders`, {\r\n      headers, // Include headers with the auth token\r\n      params: {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n      }\r\n    });\r\n\r\n    // Handle the response\r\n    settotaldata(response.data);\r\n   } catch (error) {\r\n    console.error(\"Error fetching total orders\", error);\r\n  }\r\n};\r\n\r\n\r\nconst [dateRange, setDateRange] = useState('Today');\r\nconst [showCustomDateInputs, setShowCustomDateInputs] = useState(false);\r\nconst [showDropdown, setShowDropdown] = useState(false);\r\nconst [customStartDate, setCustomStartDate] = useState('');\r\nconst [customEndDate, setCustomEndDate] = useState('');\r\nconst dropdownRef = useRef(null);\r\n\r\nconst handleDateRangeChange = (range) => {\r\n  setDateRange(range);\r\n  setShowCustomDateInputs(range === 'Custom');\r\n  setShowDropdown(false);\r\n  \r\n  // Fetch data based on the selected date range\r\n  const currentDate = new Date();\r\n  let startDate, endDate;\r\n\r\n  switch (range) {\r\n    case 'Today':\r\n      startDate = endDate = currentDate.toISOString().split('T')[0];\r\n      break;\r\n    case 'Last7Days':\r\n      startDate = new Date(currentDate.setDate(currentDate.getDate() - 7)).toISOString().split('T')[0];\r\n      endDate = new Date().toISOString().split('T')[0];\r\n      break;\r\n    case 'Last30Days':\r\n      startDate = new Date(currentDate.setDate(currentDate.getDate() - 30)).toISOString().split('T')[0];\r\n      endDate = new Date().toISOString().split('T')[0];\r\n      break;\r\n    default:\r\n      startDate = endDate = '';\r\n  }\r\n  \r\n   // Fetch data based on the date range here\r\n  totalorders(startDate,endDate)\r\n};\r\n\r\nconst handleCustomDateChange = () => {\r\n  setDateRange('Custom');\r\n  setShowDropdown(false);\r\n  setShowCustomDateInputs(false);\r\n\r\n  if (customStartDate && customEndDate) {\r\n     // Fetch data based on the custom date range here\r\n    totalorders(customStartDate,customEndDate)\r\n  } else {\r\n    console.error('Custom dates are not set properly');\r\n  }\r\n};\r\n\r\nconst handleClickOutside = (event) => {\r\n  if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n    setShowDropdown(false);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  document.addEventListener('mousedown', handleClickOutside);\r\n  return () => {\r\n    document.removeEventListener('mousedown', handleClickOutside);\r\n  };\r\n}, []);\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\" md:w-[85%] lg:w-[90%]  w-[100%] px-[20px] mt-16 pb-8 \">\r\n\r\n        \r\n         <div className=\"flex justify-between text-white  w-[100%]\">\r\n            <div className=\"lg:text-xl text-lg font-bold\">Welcome <span className=\"text-yellow-500 capitalize\">{params?.userdata?.name}</span>,</div>\r\n            \r\n         </div>\r\n         <div className=\"bg-[white] rounded-md mt-2 px-3 py-6\">\r\n            \r\n      \r\n         \r\n       \r\n               \r\n                     \r\n          \r\n       \r\n \r\n  \r\n         </div>\r\n         <div className=\"space-y-5 pb-3 mt-3\">\r\n            <div className=\"flex gap-3 lg:flex-row flex-col\">\r\n            <div className=\"bg-gradient-to-tl from-green-300 lg:w-[50%] px-5 py-3 via-green-600 text-white rounded-md to-green-500\">\r\n      {/* Dropdown Menu for Date Range Selection */}\r\n      <div>\r\n      <button onClick={() => setShowDropdown(!showDropdown)}>Select Date Range</button>\r\n      {showDropdown && (\r\n        <div ref={dropdownRef} className=\"dropdown gap-5 absolute bg-gray-600 px-2 py-2 rounded-md flex \">\r\n          <div className=\"flex   flex-col\"> \r\n\r\n          <button onClick={() => handleDateRangeChange('Today')}>Today</button>\r\n          <button onClick={() => handleDateRangeChange('Last7Days')}>Last 7 Days</button>\r\n          <button onClick={() => handleDateRangeChange('Last30Days')}>Last 30 Days</button>\r\n          <button onClick={() => handleDateRangeChange('Custom')}>Custom</button>\r\n          </div>\r\n          {showCustomDateInputs && (\r\n            <div className=\"flex flex-col\">\r\n              <input className=\"text-black\"\r\n                type=\"date\"\r\n                value={customStartDate}\r\n                onChange={(e) => setCustomStartDate(e.target.value)}\r\n              />\r\n              <input  className=\"text-black\"\r\n                type=\"date\"\r\n                value={customEndDate}\r\n                onChange={(e) => setCustomEndDate(e.target.value)}\r\n              />\r\n              <button onClick={handleCustomDateChange}>Apply Custom Dates</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n      {/* Sales Data Section */}\r\n      <div className=\"flex flex-col space-y-4 mt-6\">\r\n        <div className=\"flex justify-center w-[100%]\">\r\n          <div className=\"font-bold text-xl\">Sales</div>\r\n        </div>\r\n\r\n        <div className=\"mt-3 space-y-2 lg:space-y-0\">\r\n          <div className=\"flex justify-between w-[100%]\">\r\n            <div className=\"w-[33%]\">Total Sales</div>\r\n            <div className=\"w-[40%] text-center\">{totaldata?.totalOrders}</div>\r\n            <div className=\"w-[26%] text-center\">₹ {totaldata?.totalAmount}</div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between w-[100%]\">\r\n            <div className=\"w-[33%]\">Cancel</div>\r\n            <div className=\"w-[40%] text-center\">{totaldata?.totalCancelCount}</div>\r\n            <div className=\"w-[26%] text-center\">₹ {totaldata?.totalCancelamount}</div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between w-[100%]\">\r\n            <div className=\"w-[33%]\">Net Proceed</div>\r\n            <div className=\"w-[40%] text-center\">{totaldata?.netproced}</div>\r\n            <div className=\"w-[26%] text-center\">₹ {totaldata?.netprocedamount}</div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between w-[100%]\">\r\n            <div className=\"w-[33%]\">Return</div>\r\n            <div className=\"w-[40%] text-center\">{totaldata?.totalretrunCount}</div>\r\n            <div className=\"w-[26%] text-center\">₹ {totaldata?.totalreturnamount}</div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between w-[100%]\">\r\n            <div className=\"w-[33%]\">Net Sale</div>\r\n            <div className=\"w-[40%] text-center\">{totaldata?.netsale}</div>\r\n            <div className=\"w-[26%] text-center\">₹ {totaldata?.netsaleamount}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n                 \r\n                 <div className=\"lg:w-[50%]   \">\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div className=\"text-xl font-semibold\">Shipment Details</div>\r\n                 </div>\r\n                <div className=\"flex justify-between flex-wrap  \">\r\n                    <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-gray-300  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.Unshipped}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.Unshipped / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">Unshipped</div>   \r\n                     </div>\r\n                     </div>\r\n\r\n                   \r\n                    <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-red-300  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.InTransit}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.InTransit / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">In-Transit</div>   \r\n                     </div>\r\n                     </div>\r\n\r\n\r\n                     <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-red-500  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.OFD}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.OFD / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">OFD</div>   \r\n                     </div>\r\n                     </div>\r\n                    <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-green-300  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.Delivered}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.Delivered / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">Delivered</div>   \r\n                     </div>\r\n                     </div>\r\n                    \r\n                  \r\n                    <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-yellow-500  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.RTO}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.RTO / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">RTO</div>   \r\n                     </div>\r\n                     </div>\r\n                    <div className=\"w-[32%] bg-white mt-2 rounded-md border-b-[14px] py-2 border-green-500  \"> \r\n                    <div className=\"flex justify-center items-center gap-1  w-[100%]\">\r\n                 <div className=\"font-bold text-xl\">{totaldata?.DTO}</div>   \r\n                 <div className=\"text-gray-500 font-medium text-sm \">({((totaldata?.DTO / totaldata?.totalOrder) * 100).toFixed(1)})%</div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center gap-2  w-[100%]\">\r\n                 <div className=\"font-normal text-sm\">DTO</div>   \r\n                     </div>\r\n                     </div>\r\n                     \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div >\r\n            <div className=\"flex  lg:justify-between lg:gap-0 gap-2 justify-center flex-wrap \">\r\n\r\n              <div className=\"bg-white shadow-xl rounded-md  py-2 w-[49%] lg:w-[33%]\">\r\n               <div>\r\n                  <div className=\"border-gray-300 px-3 py-2 font-semibold md:text-sm text-[13px] border-b-[1px]\">Top 5 Performing States</div>\r\n               </div>\r\n               <div className=\"px-3 space-y-3\">\r\n               <div className=\"    md:text-[14px] text-[12px] flex justify-between\" >\r\n            <div>State</div>\r\n              <div>totalorders  </div>\r\n               \r\n           </div>\r\n               {statedata?.map(product => (\r\n          <div className=\"flex  md:text-[14px] text-[12px] justify-between\" key={product._id}>\r\n            <div>{product._id}</div>\r\n              <div>{product.totalOrders  }</div>\r\n               \r\n           </div>\r\n        ))}\r\n               </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-white shadow-xl rounded-md  py-2 w-[49%] lg:w-[33%]\">\r\n               <div>\r\n                  <div className=\"border-gray-300 px-3 py-2 font-semibold md:text-sm text-[13px]  border-b-[1px]\">Top 5 Products</div>\r\n               </div>\r\n               <div className=\"px-3 space-y-3\">\r\n               <div className=\"flex  md:text-[14px] text-[12px] justify-between\" >\r\n            <div>productname</div>\r\n              <div>totalsale  </div>\r\n              <div>instock</div>\r\n           </div>\r\n               {products?.map(product => (\r\n          <div className=\"flex    md:text-[14px] text-[12px] justify-between\" key={product._id}>\r\n            <div>{product.name}</div>\r\n              <div>{product.totalsale  }</div>\r\n              <div>{(product.purchasestock)-(product.instock)}</div>\r\n           </div>\r\n        ))}\r\n               </div>\r\n              \r\n              </div>\r\n              \r\n              <div className=\"bg-white shadow-xl rounded-md w-[100%]  py-2 md:w-[49%] lg:w-[33%]\">\r\n               <div>\r\n                  <div className=\"border-gray-300 px-3 py-2 font-semibold md:text-sm text-[13px]  border-b-[1px]\">Top pincode (RTO/DTO)</div>\r\n               </div>\r\n               <div className=\" w-[100%] flex\">\r\n               <div className=\"px-3  w-[50%]    border-r-[1px] border-gray-500 space-y-1\">\r\n                  <div className=\"flex justify-center\">\r\n                     <div>DTO</div>\r\n                  </div>\r\n               <div className=\"flex justify-between\" >\r\n            <div>Pincode</div>\r\n              <div>Total DTO</div>\r\n               \r\n           </div>\r\n               {pincode?.top5DTOpincode?.map(product => (\r\n          <div className=\"flex justify-between\" key={product._id}>\r\n            <div>{product._id}</div>\r\n              <div>{product.totalDTO  }</div>\r\n               \r\n           </div>\r\n        ))}\r\n               </div>\r\n               <div className=\"px-3 w-[50%] space-y-1\">\r\n               <div className=\"flex justify-center\">\r\n                     <div>RTO</div>\r\n                  </div>\r\n               <div className=\"flex justify-between\" >\r\n            <div>Pincode</div>\r\n              <div>Total RTO</div>\r\n               \r\n           </div>\r\n               {pincode?.top5RTOpincode?.map(product => (\r\n          <div className=\"flex justify-between\" key={product._id}>\r\n            <div>{product._id}</div>\r\n            \r\n              <div>{product.totalRTO}</div>\r\n               \r\n           </div>\r\n        ))}\r\n               </div>\r\n              </div>\r\n              </div>\r\n              \r\n              \r\n              </div>\r\n            </div>\r\n         </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Dashboard","params","_params$userdata","_pincode$top5DTOpinco","_pincode$top5RTOpinco","document","body","style","backgroundColor","products","setProducts","useState","statedata","setstate","pincode","setpincode","totaldata","settotaldata","apiKey","getHeaders","headers","localStorage","getItem","useEffect","async","response","axios","get","data","error","console","fetchTopProducts","fetchTopStates","totalorders","fetchTopPincode","startDate","arguments","length","undefined","endDate","dateRange","setDateRange","showCustomDateInputs","setShowCustomDateInputs","showDropdown","setShowDropdown","customStartDate","setCustomStartDate","customEndDate","setCustomEndDate","dropdownRef","useRef","handleDateRangeChange","range","currentDate","Date","toISOString","split","setDate","getDate","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","_jsx","_Fragment","children","_jsxs","className","userdata","name","onClick","ref","type","value","onChange","e","handleCustomDateChange","totalOrders","totalAmount","totalCancelCount","totalCancelamount","netproced","netprocedamount","totalretrunCount","totalreturnamount","netsale","netsaleamount","Unshipped","totalOrder","toFixed","InTransit","OFD","Delivered","RTO","DTO","map","product","_id","totalsale","purchasestock","instock","top5DTOpincode","totalDTO","top5RTOpincode","totalRTO"],"sourceRoot":""}