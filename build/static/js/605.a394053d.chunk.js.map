{"version":3,"file":"static/js/605.a394053d.chunk.js","mappings":"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","sources":["component/user/userdata.js","component/adminpopup.js","component/user/createuser.js","component/user/profile.js","component/user.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DataContext from \"../usecontext/DataContext\";\r\n\r\nexport default function Userdata() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { userrole } = useContext(DataContext);\r\n  const apiKey = \"https://backend-mqr6.onrender.com\";\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (userrole?.role === 0) {\r\n      navigate(\"/home/User\");\r\n    }\r\n  }, [userrole, navigate]);\r\n\r\n  useEffect(() => {\r\n    fetchuser();\r\n  }, []);\r\n\r\n  const fetchuser = async () => {\r\n    try {\r\n      const headers = {\r\n        'authtoken': localStorage.getItem(\"token\")\r\n      };\r\n\r\n      const response = await axios.get(`${apiKey}/api/auth/getalluser`, { headers });\r\n      setLoading(false);\r\n      setData(response.data);\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleButtonChange = async (id, field) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const currentValue = data.User.find(user => user._id === id)[field];\r\n      const newValue = !currentValue;\r\n  \r\n      if (token) {\r\n        await axios.put(`${apiKey}/api/auth/changeuser/${id}`, { [field]: newValue }, {\r\n          headers: { \"authtoken\": token }\r\n        });\r\n        fetchuser(); // Refresh data after update\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  const changeUserRole = async (id, role) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        await axios.put(`${apiKey}/api/auth/changeuser/${id}`, { role: role }, {\r\n          headers: { \"authtoken\": token }\r\n        });\r\n        fetchuser();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p className=\"text-center\">Loading...</p>;\r\n  if (error) return <p className=\"text-center text-red-500\">Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div className=\"mt-4 max-w-4xl h-[600px] mx-auto p-4\">\r\n      {data?.User?.map((person) => (\r\n        <div key={person._id} className=\"bg-green-200 shadow-lg rounded-lg  md:gap-20 justify-between  mb-4 p-4 flex flex-col md:flex-row\">\r\n          <div className=\"flex-shrink-0 w-full md:w-1/4 mb-4 md:mb-0\">\r\n            <div className=\"text-lg font-semibold\">{person.name}</div>\r\n            <div className=\"text-gray-600\">{person.email}</div>\r\n            <div className=\"text-gray-600\">{person.phone}</div>\r\n          </div>\r\n          <div className=\"flex-1  md:ml-4\">\r\n            <div className=\"flex justify-between mb-4\">\r\n              {!person.role === 1&&\r\n              <button\r\n              onClick={() => changeUserRole(person._id, person.role === 0 ? 5 : 0)}\r\n              className={`px-4 py-2 rounded-lg text-white ${person.role === 0 ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'}`}\r\n              >\r\n                { person.role === 0 ? 'Block' : 'Unblock'}\r\n              </button>\r\n              }\r\n            </div>\r\n            <div className=\"flex gap-4\">\r\n              {['canEdit', 'canAdd', 'canDelete'].map((field) => (\r\n                <div key={field} className=\"flex items-center gap-2\">\r\n                  <span className=\"font-medium\">{field.replace('can', '')}</span>\r\n                  <button\r\n                    onClick={() => handleButtonChange(person._id, field)}\r\n                    className={`px-4 py-2 rounded-lg text-white ${person[field] ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-300 hover:bg-gray-400'}`}\r\n                  >\r\n                    {person[field] ? 'Enabled' : 'Disabled'}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n}\r\n","import React from 'react';\r\nimport { FaTimes } from 'react-icons/fa'; // Importing the close icon from react-icons\r\n\r\nconst Adminpopup = ({ show, onClose ,message}) => {\r\n    // Auto close the popup after 3 seconds\r\n    React.useEffect(() => {\r\n        if (show) {\r\n            const timer = setTimeout(() => {\r\n                onClose();\r\n            }, 3000); // Changed to 3000 milliseconds (3 seconds)\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [show, onClose]);\r\n\r\n    if (!show) return null;\r\n\r\n    // Inline CSS for process line animation\r\n     \r\n\r\n    // Inline CSS for keyframes animation\r\n    const animationKeyframes = `\r\n        @keyframes progress-bar {\r\n            0% { width: 0%; }\r\n            100% { width: 100%; }\r\n        }\r\n    `;\r\n\r\n    return (\r\n        <div className=\"fixed top-0 left-0 w-full h-full flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n            <style>\r\n                {animationKeyframes}\r\n            </style>\r\n            <div className=\"bg-white p-6 rounded-xl shadow-lg relative max-w-lg w-full\">\r\n                <button \r\n                    onClick={onClose} \r\n                    className=\"absolute top-2 right-2 text-gray-600 hover:text-red-600 transition-transform duration-300 ease-in-out\"\r\n                    aria-label=\"Close\"\r\n                >\r\n                    <FaTimes size={24} />\r\n                </button>\r\n                {message} \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Adminpopup;\r\n","import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport DataContext from '../usecontext/DataContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Adminpopup from '../adminpopup';\r\n\r\nexport default function Createuser(params) {\r\n  const { updateOrderStatus, userrole } = useContext(DataContext);\r\n  const apiKey = \"https://backend-mqr6.onrender.com\";\r\n  const [errmassage, seterrmassage] = useState('');\r\n  const [productdata, setproductdata] = useState({ name: \"\", Email: \"\", mobile: \"\", password: \"\" });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (userrole?.role === 0) {\r\n      navigate(\"/home/User\");\r\n    }\r\n  }, [userrole]);\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!productdata.name) newErrors.name = \"Name is required\";\r\n    if (!productdata.Email || !/\\S+@\\S+\\.\\S+/.test(productdata.Email)) newErrors.Email = \"Valid email is required\";\r\n    if (!productdata.mobile || !/^\\d{10}$/.test(productdata.mobile)) newErrors.mobile = \"Valid 10-digit mobile number is required\";\r\n    if (!productdata.password || productdata.password.length < 6) newErrors.password = \"Password must be at least 6 characters long\";\r\n    return newErrors;\r\n  };\r\n\r\n  const adduser = async () => {\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { name, Email, mobile, password } = productdata;\r\n\r\n      // Convert values to strings (optional, depends on API requirements)\r\n      const name1 = name.toString();\r\n      const Email1 = Email.toString();\r\n      const mobile1 = mobile.toString();\r\n      const password1 = password.toString();\r\n\r\n      const token = localStorage.getItem('token');\r\n\r\n      await axios.post(\r\n        `${apiKey}/api/auth/createuser`,\r\n        {\r\n          name: name1,\r\n          email: Email1,\r\n          phone: mobile1,\r\n          password: password1\r\n        },\r\n        {\r\n          headers: { \"authtoken\": token }\r\n        }\r\n      )\r\n        .then((response) => {\r\n          // Clear product data and call handleAddItem\r\n          setproductdata({ name: \"\", Email: \"\", mobile: \"\", password: \"\" });\r\n          if (response.data.success) {\r\n            seterrmassage(\r\n              <>\r\n                <p className=\"text-green-700 text-xl font-semibold mb-4\">{response.data.message}</p>\r\n                <div className=\"relative w-full rounded-xl overflow-hidden h-2 bg-green-200 mt-2\">\r\n                  <div className=\"absolute top-0 left-0 h-full bg-green-500 animate-progress-bar\"></div>\r\n                </div>\r\n              </>\r\n            );\r\n            handleAddItem();\r\n          } else {\r\n            seterrmassage(\r\n              <>\r\n                <p className=\"text-red-700 text-xl font-semibold mb-4\">{response.data.message}</p>\r\n                <div className=\"relative w-full rounded-xl overflow-hidden h-2 bg-red-200 mt-2\">\r\n                  <div className=\"absolute top-0 left-0 h-full bg-red-500 animate-progress-bar\"></div>\r\n                </div>\r\n              </>\r\n            );\r\n            handleAddItem();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error:', err);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const onchange = (e) => {\r\n    setproductdata({ ...productdata, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleAddItem = () => {\r\n    // Simulate an add item action\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\" \">\r\n        <div className=\"App\">\r\n          <Adminpopup show={showPopup} onClose={handleClosePopup} message={errmassage} />\r\n        </div>\r\n        <div className=\"mt-4 lg:w-full\">\r\n          <div className=\"bg-[#f2f2f2] grid md:grid-cols-2 text-black px-2 gap-6 md:gap-12 items-center\">\r\n            {['name', 'Email', 'mobile', 'password'].map((field, index) => (\r\n              <div key={index} className='w-[100%] mb-4'>\r\n                <input\r\n                  type={field === 'password' ? 'password' : 'text'}\r\n                  name={field}\r\n                  onChange={onchange}\r\n                  value={productdata[field]}\r\n                  placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  className={`px-3 py-1 w-[100%] border-[2px] rounded-md ${errors[field] ? 'border-red-500' : 'border-black'}`}\r\n                />\r\n                {errors[field] && <p className=\"text-red-500 text-sm mt-1\">{errors[field]}</p>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className='flex justify-center mt-5 w-full'>\r\n            <button\r\n              onClick={() => adduser()}\r\n              className=\"bg-blue-500 text-white font-bold py-2 px-4 w-[50%] rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n            >\r\n              Create User\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChangePassword = (params) => {\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [showOldPassword, setShowOldPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n\r\n  const apiKey = \"https://backend-mqr6.onrender.com\";\r\n\r\n  const handleChangePassword = async () => {\r\n    if (newPassword.length < 5) {\r\n      return setMessage('New Password must be at least 5 characters');\r\n    }\r\n    if (oldPassword.length === 0) {\r\n      return setMessage('Old Password is required');\r\n    }\r\n\r\n    try {\r\n      const token = await localStorage.getItem('token');\r\n      if (token) {\r\n        const response = await axios.post(\r\n          `${apiKey}/api/auth/change`,\r\n          {\r\n            newpassword: newPassword,\r\n            password: oldPassword,\r\n          },\r\n          {\r\n            headers: { authtoken: token },\r\n          }\r\n        );\r\n\r\n        if (response.data === 'Success! Your password has been updated') {\r\n          setMessage(response.data);\r\n          setTimeout(() => {\r\n            setIsVisible(false);\r\n            setMessage(\"\")\r\n            setNewPassword(\"\")\r\n            setOldPassword(\"\")\r\n          }, 1000);\r\n        }\r\n        if (response.data === 'Incorrect password; please try again') {\r\n          setMessage(response.data);\r\n          \r\n        }\r\n\r\n      } else {\r\n        setMessage('No authentication token found');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while changing the password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative flex justify-center items-center py-10 bg-gray-200\">\r\n      {/* 3D Effect Container */}\r\n      <div className=\"perspective-1000\">\r\n        <div className=\"transition-transform transform hover:rotate-y-6 hover:rotate-x-6 hover:scale-105 relative w-96 h-96 perspective-1000\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-red-500 shadow-lg rounded-lg p-6 border border-transparent hover:border-gray-300 hover:border-opacity-50 transition-transform duration-500\">\r\n            <div className=\"text-2xl font-bold text-white mb-4\">User Details</div>\r\n            <div className=\"space-y-4 text-white\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"font-medium\">Name:</span>\r\n                <span className='uppercase'>{params?.user?.name || 'N/A'}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"font-medium\">Email:</span>\r\n                <span className='uppercase'>{params?.user?.email || 'N/A'}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"font-medium\">Phone:</span>\r\n                <span className='uppercase'>{params?.user?.phone || 'N/A'}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsVisible(true)}\r\n              className=\"w-full mt-4 py-2 bg-white text-purple-600 font-semibold rounded-lg shadow-md hover:bg-purple-600 hover:text-white transition-colors duration-300\"\r\n            >\r\n              Change Password\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Popup Modal */}\r\n      {isVisible && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-sm w-full relative\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Change Password</h2>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleChangePassword();\r\n              }}\r\n            >\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"oldPassword\" className=\"block text-gray-700\">Old Password:</label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type={showOldPassword ? 'text' : 'password'}\r\n                    id=\"oldPassword\"\r\n                    value={oldPassword}\r\n                    onChange={(e) => setOldPassword(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                    required\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowOldPassword(!showOldPassword)}\r\n                    className=\"absolute inset-y-0 right-0 px-3 py-2 text-gray-500\"\r\n                  >\r\n                    {showOldPassword ? 'Hide' : 'Show'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"newPassword\" className=\"block text-gray-700\">New Password:</label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type={showNewPassword ? 'text' : 'password'}\r\n                    id=\"newPassword\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n                    required\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowNewPassword(!showNewPassword)}\r\n                    className=\"absolute inset-y-0 right-0 px-3 py-2 text-gray-500\"\r\n                  >\r\n                    {showNewPassword ? 'Hide' : 'Show'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg shadow-md hover:bg-gradient-to-l transition-all duration-300\"\r\n              >\r\n                Change Password\r\n              </button>\r\n            </form>\r\n            {message && <p className={`mt-4 ${message == \"Success! Your password has been updated\" ? 'text-green-500':\"text-red-500\"} `}>{message}</p>}\r\n            <button\r\n              onClick={() => setIsVisible(false)}\r\n              className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-800\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport {  Route,Routes } from 'react-router-dom';\r\nimport Products1 from \"./products/products\";\r\nimport Purchase from \"./products/Purchase\";\r\nimport CreatePurchase from \"./products/Createpurchase\";\r\nimport CreateProducts from \"./products/createproduct\";\r\nimport Createsupplier from \"./supplier/createsupplier\";\r\nimport Supplierdetail from \"./supplier/supplierdetail\";\r\nimport Userdata from \"./user/userdata\";\r\nimport Createuser from \"./user/createuser\";\r\nimport ChangePassword from \"./user/profile\";\r\nimport DataContext from \"./usecontext/DataContext\";\r\nimport NotFound from \"./Notfound\";\r\n\r\n\r\nexport default  function User (params) {\r\n\r\n\r\n  const { updateOrderStatus ,userrole} = useContext(DataContext);\r\n\r\n\r\n  //console.log(params.userdata)\r\n  document.body.style.backgroundColor =\"#f6f6f6\"\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      const navbar = document.querySelector('.topnavbar');\r\n    const links = navbar.querySelectorAll('.child');\r\n  \r\n        links.forEach((otherLink) => {\r\n          otherLink.style.color = 'white';\r\n          otherLink.style.backgroundColor = '#31344f';\r\n        });\r\n  \r\n        const activeLink = Array.from(links).find(\r\n            (link) => link.getAttribute('href') === location.pathname\r\n        );\r\n  \r\n        if (activeLink) {\r\n           \r\n            activeLink.style.color = 'black';\r\n            activeLink.style.backgroundColor = '#a0afc5';\r\n        }\r\n    }, [location]);\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\" md:w-[85%] lg:w-[90%]  w-[100%] px-[20px] mt-16 \">\r\n         <div className=\"flex justify-between text-white  w-[100%]\">\r\n            <div className=\"lg:text-xl text-lg font-semibold\">Profile</div>\r\n            <div className=\"flex lg:space-x-4 lg:text-sm text-[10px] space-x-2\">\r\n                <Link to=\"/\">Dashboard</Link>\r\n                <Link to=\"/home/reports\">Reports</Link>\r\n                <div> </div>\r\n            </div>\r\n         </div>\r\n         <div className=\"bg-[white] rounded-md mt-2 px-3 py-6\">\r\n            <div className=\"bg-[#31344f] flex gap-2 text-white p-3 rounded-md flex-wrap topnavbar\">\r\n                <Link to='' className=\"rounded-full text-black cursor-pointer child bg-[#a0afc5] px-2\">Profile</Link>\r\n                {userrole?.role == 1 && <Link to='./user' className=\"rounded-full text-black cursor-pointer child bg-[#a0afc5] px-2\">user</Link>}\r\n                {userrole?.role == 1 && <Link to='./create-user' className=\"rounded-full px-2 child cursor-pointer\">Create user</Link> }  \r\n              </div>\r\n       \r\n\r\n         \r\n       \r\n               \r\n          \r\n      <div className=\"scroll-container pb-3\" style={{  overflowX: 'auto' }}>\r\n        <Routes>\r\n            <Route path=\"user\" element={<Userdata />} />\r\n            {userrole?.role == 1 &&\r\n                <Route path=\"create-user\" element={<Createuser/>} />}\r\n            \r\n                <Route path=\"\" element={<ChangePassword  user={params.userdata}/>} />\r\n                           <Route path='*' element={<NotFound/>} />\r\n\r\n         </Routes>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .scroll-container::-webkit-scrollbar {\r\n          width: 10px;\r\n          height: 10px;\r\n         \r\n         }\r\n        .scroll-container::-webkit-scrollbar-track {\r\n          background: white;\r\n          border: 1px #888888 solid\r\n         }\r\n        .scroll-container::-webkit-scrollbar-thumb {\r\n          background: #888;\r\n          border-radius: 10px\r\n        }\r\n        .scroll-container::-webkit-scrollbar-thumb:hover {\r\n          background: #555;\r\n        }\r\n      `}</style>\r\n  \r\n         </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Userdata","_data$User","data","setData","useState","loading","setLoading","error","setError","userrole","useContext","DataContext","apiKey","navigate","useNavigate","useEffect","role","fetchuser","async","headers","localStorage","getItem","response","axios","get","_jsx","className","children","_jsxs","message","User","map","person","name","email","phone","onClick","id","token","put","console","changeUserRole","_id","field","replace","newValue","find","user","handleButtonChange","_ref","show","onClose","React","timer","setTimeout","clearTimeout","FaTimes","size","Createuser","params","updateOrderStatus","errmassage","seterrmassage","productdata","setproductdata","Email","mobile","password","errors","setErrors","adduser","validationErrors","validate","newErrors","test","length","Object","keys","name1","toString","Email1","mobile1","password1","post","then","success","_Fragment","handleAddItem","catch","err","onchange","e","target","value","showPopup","setShowPopup","Adminpopup","handleClosePopup","index","type","onChange","placeholder","charAt","toUpperCase","slice","_params$user","_params$user2","_params$user3","oldPassword","setOldPassword","newPassword","setNewPassword","setMessage","isVisible","setIsVisible","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","onSubmit","preventDefault","newpassword","authtoken","handleChangePassword","htmlFor","required","document","body","style","backgroundColor","location","useLocation","links","querySelector","querySelectorAll","forEach","otherLink","color","activeLink","Array","from","link","getAttribute","pathname","Link","to","overflowX","Routes","Route","path","element","ChangePassword","userdata","NotFound","jsx"],"sourceRoot":""}