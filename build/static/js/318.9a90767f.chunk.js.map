{"version":3,"file":"static/js/318.9a90767f.chunk.js","mappings":"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","sources":["component/products/Createpurchase.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport AddPopup from '../popup';\r\n\r\nexport default  function CreatePurchase (params) {\r\n\r\n  const [errors, setErrors] = useState({}); // Added for error handling\r\n\r\n  const [productdata, setproductdata] = useState({billdate:\"\",billno:\"\"})\r\n  let apiKey = \"https://backend-mqr6.onrender.com\"\r\n  const [errmassage, seterrmassage] = useState('')\r\n\r\n \r\n  const addpurchase = async (id) => {\r\n    const newErrors = {};\r\n    if (!supplierquery) newErrors.supplierquery = \"Supplier is required\";\r\n    if (!productdata.billdate) newErrors.billdate = \"Bill date is required\";\r\n    if (!productdata.billno) newErrors.billno = \"Bill number is required\";\r\n    \r\n    formValues.forEach((item, index) => {\r\n      if (!item.productname) newErrors[`productname_${index}`] = \"Product name is required\";\r\n      if (!item.quantity || isNaN(item.quantity) || item.quantity <= 0) newErrors[`quantity_${index}`] = \"Valid quantity is required\";\r\n      if (!item.rateper || isNaN(item.rateper) || item.rateper <= 0) newErrors[`rateper_${index}`] = \"Valid rate per is required\";\r\n      if (!item.amount || isNaN(item.amount) || item.amount <= 0) newErrors[`amount_${index}`] = \"Valid amount is required\";\r\n    });\r\n  \r\n    if (Object.keys(newErrors).length) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const { billdate, billno } = productdata;\r\n      const billdate1 = billdate.toString();\r\n      const billno1 = billno.toString();\r\n      const token = localStorage.getItem('token');\r\n      \r\n      const response = await axios.post(\r\n        `${apiKey}/api/purchase/addpurchase`,\r\n        {\r\n          productname: formValues,\r\n          billdate: billdate1,\r\n          billno: billno1,\r\n          supplier: supplierquery\r\n        },\r\n        {\r\n          headers: { \"authtoken\": token }\r\n        }\r\n      );\r\n  \r\n      if (response.data.success) {\r\n        seterrmassage(\r\n          <>\r\n            <p className=\"text-green-600 font-semibold text-lg mb-2\">{response.data.message}</p>\r\n            <div className=\"relative w-full h-2 rounded-full overflow-hidden bg-green-200 mt-4\">\r\n              <div className=\"absolute top-0 left-0 h-full bg-green-500 animate-progress-bar2\" style={{ animationDuration: '0.5s' }}></div>\r\n            </div>\r\n          </>\r\n        );\r\n        handleAddItem(); // Make sure this function is defined\r\n        // Clear form data after successful submission\r\n        setFormValues([{ quantity: '', amount: '', productname: \"\", serialNumbers: [], serialInput: '', rateper: \"\" }]);\r\n        setproductdata({ billdate: \"\", billno: \"\" });\r\n        setsupplierQuery(\"\");\r\n      } else {\r\n        seterrmassage(\r\n          <>\r\n            <p className=\"text-red-600 font-semibold text-lg mb-2\">{response.data.message}</p>\r\n            <div className=\"relative w-full h-2 rounded-full overflow-hidden bg-red-200 mt-4\">\r\n              <div className=\"absolute top-0 left-0 h-full bg-red-500 animate-progress-bar2\" style={{ animationDuration: '0.5s' }}></div>\r\n            </div>\r\n          </>\r\n        );\r\n        handleAddItem(); // Make sure this function is defined\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      seterrmassage(\r\n        <>\r\n          <p className=\"text-red-600 font-semibold text-lg mb-2\">An error occurred. Please try again.</p>\r\n          <div className=\"relative w-full h-2 rounded-full overflow-hidden bg-red-200 mt-4\">\r\n            <div className=\"absolute top-0 left-0 h-full bg-red-500 animate-progress-bar2\" style={{ animationDuration: '0.5s' }}></div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n \r\n    const onchange =(e)=>{\r\n      setproductdata({...productdata,[e.target.name]:[e.target.value]})\r\n   }\r\n   const [showPopup, setShowPopup] = useState(false);\r\n   const handleAddItem = () => {\r\n    // Simulate an add item action\r\n    setShowPopup(true);\r\n};\r\n\r\nconst handleClosePopup = () => {\r\n    setShowPopup(false);\r\n};\r\n\r\n\r\n\r\n\r\n   const [seriallength, setseriallength] = useState(0)\r\n\r\n \r\n  const [serialInputValues, setSerialInputValues] = useState({}) \r\n \r\n  \r\n  const handleChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n   \r\n    setSerialInputValues({\r\n      ...serialInputValues,\r\n      [index]: value\r\n    });\r\n  };\r\n\r\n  \r\n \r\n\r\n  const handleAddSerial = (e, index) => {\r\n     //console.log(\"yew\")\r\n    const values = [...formValues];\r\n    const valueToAdd = serialInputValues[index]; // Ensure the value is a number\r\n  //console.log(valueToAdd)\r\n  //console.log(values[FocusedIndexmain])\r\n    // Check if the valueToAdd already exists in the serialNumbers array\r\n    if (!values[FocusedIndexmain].serialNumbers.includes(valueToAdd)  ) {\r\n        if(values[FocusedIndexmain].serialNumbers.length <= values[FocusedIndexmain].quantity){\r\n         \r\n        values[FocusedIndexmain].serialNumbers.push(valueToAdd);\r\n        setFormValues(values);\r\n        setSerialInputValues({\r\n          ...serialInputValues,\r\n          [index]: '' // Clear the input field for the current index\r\n        });\r\n      }\r\n\r\n\r\n       const currentSerialLength = values[index].serialNumbers.length;\r\n      setseriallength(currentSerialLength);\r\n  \r\n      if (values[index].quantity == currentSerialLength) {\r\n        setserialpopview(false);\r\n      } else {\r\n        setserialpopview(true);\r\n      }\r\n    } else {\r\n      // Optionally, you can handle the case where the serial number already exists\r\n      //console.log('Serial number already exists');\r\n    }\r\n  };\r\n \r\n\r\n \r\n\r\n \r\n  const handleKeyPress = (e,index) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddSerial(e,index);\r\n    }\r\n  };\r\n\r\n\r\n \r\n  const handleRemoveSerial = (serialToRemove) => {\r\n    const updatedFormValues = [...formValues];\r\n    const currentSerialNumbers = updatedFormValues[FocusedIndexmain].serialNumbers;\r\n    \r\n    // Filter out the serial to be removed\r\n    updatedFormValues[FocusedIndexmain].serialNumbers = currentSerialNumbers.filter(serial => serial !== serialToRemove);\r\n  \r\n    // Update the state\r\n    setFormValues(updatedFormValues);\r\n  };\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [supplier, setsupplier] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [supplierquery, setsupplierQuery] = useState('');\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [filteredsupplier, setFilteredsupplier] = useState([]);\r\n  const [focusedIndex , setFocusedIndex] = useState([]);\r\n  const [FocusedIndexmain , setFocusedIndexmain] = useState([]);\r\n  const [serialpopview , setserialpopview] = useState(false);\r\n  const [Serialrequired , setserialrequired] = useState('');\r\n \r\n  \r\n \r\n  useEffect(() => {\r\n      const fetchProducts = async () => {\r\n          try {\r\n            let token = localStorage.getItem('token')\r\n              const response = await axios.get(`${apiKey}/api/product/productnames`,{method: 'GET',\r\n                headers:{\r\n                     \r\n                    'authtoken': token\r\n                },\r\n               });\r\n              setProducts(response.data);\r\n          } catch (error) {\r\n              console.error('Error fetching products:', error);\r\n          }\r\n      };\r\n      const fetchsupplier = async () => {\r\n          try {\r\n            let token =localStorage.getItem(\"token\")\r\n              const response = await axios.get(`${apiKey}/api/supplier/suppliernames`,{method: 'GET',\r\n                headers:{\r\n                     \r\n                    'authtoken': token\r\n                },\r\n               });\r\n              setsupplier(response.data);\r\n          } catch (error) {\r\n              console.error('Error fetching products:', error);\r\n          }\r\n      };\r\n\r\n\r\n      fetchProducts();\r\n      fetchsupplier()\r\n  }, []);\r\n\r\n   \r\n \r\nuseEffect(() => {\r\n  if (query) {\r\n      setFilteredProducts(products.productNames.filter(name =>\r\n          name.toLowerCase().includes(query.toLowerCase())\r\n      ));\r\n  } else {\r\n      setFilteredProducts([]);\r\n  }\r\n}, [query, products]);\r\n\r\nuseEffect(() => {\r\n  if (supplierquery) {\r\n      setFilteredsupplier(supplier.supplierNames.filter(name =>\r\n          name.toLowerCase().includes(supplierquery.toLowerCase())\r\n      ));\r\n  } else {\r\n      setFilteredsupplier([]);\r\n  }\r\n}, [supplierquery, supplier]);\r\n\r\n\r\n\r\n \r\n\r\nconst handleChangesupplier = (e) => {\r\n  const value = e.target.value;\r\n        setsupplierQuery(value);\r\n         if (supplier.supplierNames.some(name => name.toLowerCase().includes(value.toLowerCase()))) {\r\n            setsupplierQuery(value);\r\n        } else   {\r\n          setsupplierQuery(supplierquery);\r\n        }\r\n}; \r\n\r\n\r\n\r\n\r\nconst handleSuggestionClick = async(name, index) => {\r\n   try { let token = localStorage.getItem(\"token\")\r\n    const response = await axios.get(`${apiKey}/api/product/fetchsingleproduct/${name}`,{method: 'GET',\r\n      headers:{\r\n           \r\n          'authtoken': token\r\n      },\r\n     });\r\n    setserialrequired(response?.data?.othername1?.Serialrequired)\r\n    const values = [...formValues];\r\n    values[index]['productname'] = response?.data?.othername1?.name;\r\n    values[index]['productid'] = response?.data?.othername1?._id;\r\n    setFormValues(values);\r\n    setFilteredProducts([]);\r\n} catch (error) {\r\n    console.error('Error fetching products:', error);\r\n}\r\n  \r\n\r\n};\r\nconst handleSuggestionClick1 = (name) => {\r\n  setsupplierQuery(name);\r\n  setFilteredsupplier([]);\r\n};\r\n\r\n\r\nconst [formValues, setFormValues] = useState([{ quantity: '', amount: '',productname:\"\", serialNumbers: [], serialInput: '',rateper:\"\" }]);\r\n\r\nconst handleAddFields = () => {\r\n\r\n  setFormValues([...formValues, { quantity: '', amount: '',productname:\"\", serialNumbers: [], serialInput: '',rateper:\"\" }]);\r\n};\r\n\r\nconst handleRemoveFields = index => {\r\n  const values = [...formValues];\r\n  values.splice(index, 1);\r\n  setFormValues(values);\r\n};\r\n\r\n\r\n \r\n\r\nconst handleChangeV = async (index,event) => {\r\n\r\n//console.log(\"this is daaaaaaaa\",formValues)\r\n     \r\n  const values = [...formValues];\r\n \r\n   const { name, value } = event?.target;\r\n   let updatedItem = { ...values[index] };\r\n  if (name === \"rateper\") {\r\n    const amount = updatedItem.quantity * value;\r\n    values[index][\"amount\"] = amount;\r\n   }\r\n   \r\n  if(name === \"amount\"){\r\n\r\n    const rateper = value / updatedItem.quantity;\r\n    values[index][\"rateper\"] = rateper;\r\n\r\n\r\n\r\n     if(Serialrequired !== \"NO\"){\r\n\r\n  \r\n    if(values[index]['quantity'] == seriallength){  //insert length of \r\n      setserialpopview(false)\r\n      }else{\r\n\r\n        setserialpopview(true)\r\n      }  \r\n     }\r\n \r\n  }else{\r\n    setserialpopview(false)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  if(updatedItem.quantity !== 0 && name !== \"quantity\"){\r\n\r\n    if(Serialrequired !== \"NO\"){\r\n\r\n    if(values[index]['quantity'] == seriallength){  //insert length of \r\n      setserialpopview(false)\r\n      }else{\r\n\r\n        setserialpopview(true)\r\n      }\r\n    }\r\n  }else{\r\n    setserialpopview(false)\r\n\r\n  }\r\n\r\n \r\n \r\n\r\n  if (name === 'serialInput') {\r\n    values[index][name] = value;\r\n  } \r\n  else if (name === 'supplier') {\r\n    values[index][name] = value;\r\n    if (supplier.supplierNames.some(name => name.toLowerCase().includes(value.toLowerCase()))) {\r\n      values[index][event.target.name] = event.target.value;\r\n     } else   {\r\n      return\r\n    }\r\n\r\n    if (value) {\r\n      setFilteredsupplier(supplier.supplierNames.filter(name =>\r\n          name.toLowerCase().includes(value.toLowerCase())\r\n      ));\r\n  } else {\r\n      setFilteredsupplier([]);\r\n  }\r\n  } \r\n  else if (name === 'productname') {\r\n    values[index][name] = value;\r\n    if (products.productNames.some(name => name.toLowerCase().includes(value.toLowerCase()))) {\r\n      values[index][event.target.name] = event.target.value;\r\n     } else   {\r\n      return\r\n    }\r\n\r\n    if (value) {\r\n      setFilteredProducts(products.productNames.filter(name =>\r\n          name.toLowerCase().includes(value.toLowerCase())\r\n      ));\r\n  } else {\r\n      setFilteredProducts([]);\r\n  }\r\n  } \r\n  else {\r\n    values[index][name] = value;\r\n  }\r\n  \r\n   setFormValues(values);\r\n};\r\n\r\n\r\n//console.log(productdata)\r\n\r\n \r\n \r\n    return(\r\n        <>\r\n        <div className=\" \">\r\n        <div className=\"App\">\r\n            \r\n            <AddPopup show={showPopup} onClose={handleClosePopup} message={errmassage}  />\r\n       </div>\r\n        <div className='flex gap-3 mt-2'>\r\n        <div className='w-[50%]'>\r\n\r\n<input type='text' onChange={handleChangesupplier} value={supplierquery} name='supplier' placeholder='supplier name' className=\" px-3 py-1 border-black border-[2px] w-[100%] rounded-md  \"/>\r\n{errors.supplierquery && <span className=\"text-red-500\">{errors.supplierquery}</span>}\r\n\r\n{filteredsupplier && <div className='absolute bg-gray-300 px-3 z-20  rounded-md'>\r\n\r\n<div className=\"suggestions \">\r\n{filteredsupplier.map((name, index) => (\r\n    <div \r\n        key={index}\r\n        className=\"suggestion  cursor-pointer\"\r\n        onClick={() => handleSuggestionClick1(name)}\r\n    >\r\n        {name}\r\n    </div>\r\n))}\r\n</div>\r\n</div>}\r\n</div>\r\n<div className='w-[25%] flex flex-col'>\r\n<input type='text' onChange={onchange} value={productdata.billno} name='billno' placeholder='billno' className=\" px-3 py-1 border-black border-[2px]  rounded-md\"/> \r\n  \r\n {errors.billno && <span className=\"text-red-500\">{errors.billno}</span>}\r\n</div>\r\n<div className='w-[25%] flex flex-col'>\r\n\r\n<input type='date' onChange={onchange} value={productdata.billdate} name='billdate' placeholder='bill date' className=\" px-3 py-1 border-black border-[2px]   rounded-md\"/> \r\n{errors.billdate && <span className=\"text-red-500\">{errors.billdate}</span>}\r\n</div>\r\n        </div>\r\n        <div className=\"form-inline flex relative mb-4 justify-between\">\r\n  <div className='w-[25%] font-semibold'>Productname</div>\r\n  <div className='w-[25%] font-semibold'>Quantity</div>\r\n  <div className='w-[25%] font-semibold'>Rate per</div>\r\n  <div className='w-[25%] font-semibold'>Amount</div>\r\n</div>\r\n        <div  className='mt-3 w-[100%]' >\r\n      {formValues.map((element, index) => (\r\n        <div className=\" \">\r\n\r\n\r\n\r\n{index === FocusedIndexmain && element.quantity && serialpopview && (\r\n  <div className=\"fixed inset-0 flex items-center justify-center bg-gray-500 bg-opacity-50 backdrop-blur-md z-30\">\r\n    <div className=\"bg-white border-gray-500 p-4 border-[1px] rounded-md shadow-lg z-40 relative\">\r\n    <input type='text'onChange={(e)=>{handleChange(e,index)}}  onKeyPress={(e)=>{handleKeyPress(e,index)}}  value={serialInputValues[index] || ''} name='serialNumbers'  placeholder=\"Enter serial number...\" className=\" px-3 py-1 border-black border-[2px] rounded-md\"/> \r\n            \r\n            \r\n          \r\n            <button type=\"button\" onClick={(e) => handleAddSerial(e,index)}>Add Serial</button>\r\n\r\n      {element?.serialNumbers?.length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <h2 className=\"font-bold\">Serial Numbers:</h2>\r\n          <ul className=\"grid gap-2 w-[50%] mt-2\">\r\n            {element?.serialNumbers?.map((serial, idx) => (\r\n              <li\r\n                key={idx}\r\n                className=\"flex gap-2 border-gray-400 border-[1px] rounded-md px-2 items-center justify-between\"\r\n              >\r\n                {serial} \r\n                <button\r\n                  onClick={() => handleRemoveSerial(serial)}\r\n                  className=\"text-red-500\"\r\n                >\r\n                  x  \r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n\r\n        <div className=\"form-inline flex relative  justify-between\"  onFocus={() => setFocusedIndexmain(index)} key={index}>\r\n         \r\n  <div className='inline-block w-[25%]'>\r\n          <input type=\"text\" className='w-[100%]'    onFocus={() => setFocusedIndex(index)} name=\"productname\" value={element.productname || ''} onChange={e => handleChangeV(index, e)} placeholder=\"Product\" />\r\n\r\n \r\n           {errors[`productname_${index}`] && <span className=\"text-red-500\">{errors[`productname_${index}`]}</span>}\r\n\r\n {focusedIndex === index && filteredProducts &&  <div className='absolute bg-gray-300 px-3  rounded-md'>\r\n\r\n<div className=\"suggestions\">\r\n{filteredProducts.map((name,mapIndex ) => (\r\n                    <div\r\n                        key={mapIndex}\r\n                        className=\"suggestion cursor-pointer\"\r\n                        onClick={( ) => handleSuggestionClick(name, index)}\r\n                    >\r\n                        {name}\r\n                    </div>\r\n                ))}\r\n</div>\r\n</div>}\r\n</div>\r\n\r\n<div className=\"w-[25%] flex flex-col\">\r\n              <input type=\"number\" name=\"quantity\" onChange={(e) => handleChangeV(index, e)} value={element.quantity} className=\"px-3 py-1    rounded-md\" />\r\n              {errors[`quantity_${index}`] && <span className=\"text-red-500\">{errors[`quantity_${index}`]}</span>}\r\n            </div>\r\n            <div className=\"w-[25%]  flex flex-col\">\r\n              <input type=\"number\" name=\"rateper\" onChange={(e) => handleChangeV(index, e)} value={element.rateper} className=\"px-3 py-1   w- rounded-md\" />\r\n              {errors[`rateper_${index}`] && <span className=\"text-red-500\">{errors[`rateper_${index}`]}</span>}\r\n            </div>\r\n            <div className=\"w-[25%]  flex flex-col\">\r\n              <input type=\"number\" name=\"amount\" onChange={(e) => handleChangeV(index, e)} value={element.amount} className=\"px-3 py-1   rounded-md\" />\r\n              {errors[`amount_${index}`] && <span className=\"text-red-500\">{errors[`amount_${index}`]}</span>}\r\n            </div>\r\n        \r\n          \r\n          \r\n\r\n         \r\n     \r\n         \r\n          {index ? <button className='absolute bg-white border-[1px] border-gray-400 rounded-md text-[12px] text-red-500 right-0' type=\"button\" onClick={() => handleRemoveFields(index)}>Remove</button> : null}\r\n        </div>\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" onClick={() => handleAddFields( )}>Add More</button>\r\n       \r\n    </div>\r\n     <div className='flex justify-center'>\r\n\r\n         <div className='bg-blue-600 text-white py-1 px-3 rounded-md cursor-pointer' onClick={()=>{addpurchase()}}>Add Purchase</div>\r\n     </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["CreatePurchase","params","errors","setErrors","useState","productdata","setproductdata","billdate","billno","apiKey","errmassage","seterrmassage","onchange","e","target","name","value","showPopup","setShowPopup","handleAddItem","seriallength","setseriallength","serialInputValues","setSerialInputValues","handleAddSerial","index","values","formValues","valueToAdd","FocusedIndexmain","serialNumbers","includes","length","quantity","push","setFormValues","currentSerialLength","setserialpopview","products","setProducts","supplier","setsupplier","query","setQuery","supplierquery","setsupplierQuery","filteredProducts","setFilteredProducts","filteredsupplier","setFilteredsupplier","focusedIndex","setFocusedIndex","setFocusedIndexmain","serialpopview","Serialrequired","setserialrequired","useEffect","async","token","localStorage","getItem","response","axios","get","method","headers","data","error","console","fetchProducts","fetchsupplier","productNames","filter","toLowerCase","supplierNames","amount","productname","serialInput","rateper","handleChangeV","event","updatedItem","some","_jsx","_Fragment","children","_jsxs","className","AddPopup","show","onClose","handleClosePopup","message","type","onChange","placeholder","map","onClick","handleSuggestionClick1","element","_element$serialNumber","_element$serialNumber2","handleChange","onKeyPress","handleKeyPress","key","preventDefault","serial","idx","serialToRemove","updatedFormValues","currentSerialNumbers","handleRemoveSerial","onFocus","mapIndex","_response$data","_response$data$othern","_response$data2","_response$data2$other","_response$data3","_response$data3$other","othername1","_id","handleSuggestionClick","splice","handleRemoveFields","newErrors","forEach","item","isNaN","Object","keys","billdate1","toString","billno1","post","success","style","animationDuration","addpurchase"],"sourceRoot":""}