{"version":3,"file":"static/js/295.b8b92581.chunk.js","mappings":"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","sources":["component/Returnitem/RTo.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { MdEdit ,MdDelete ,MdOutlineSystemSecurityUpdate } from \"react-icons/md\";\r\nimport DataContext from \"../usecontext/DataContext\";\r\nimport { FaArrowAltCircleLeft,FaArrowAltCircleRight } from \"react-icons/fa\";\r\n\r\n\r\nexport default  function RTO (params) {\r\n\r\n\r\n    const { updateOrderStatus ,setexceldata,setsingleorderid} = useContext(DataContext);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n    const [id, setid] = useState('');\r\n    const [showpopup, setshowpopup] = useState(false);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [returnserial, setreturnserial] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalOrder, settotalOrder] = useState(\"\");\r\n   const [hasMore, setHasMore] = useState(true); // To track if there are more items to load\r\n    let [productdata, setproductdata] = useState({   billno:\"\", billdate:\"\", LRNO:\"\" ,shippingcharges:\"\" ,Trackingid:\"\" ,Courier:\"\",   Deliverybydate:\"\",Retrunstatus:\"\",Condition:\"\"})\r\n     const apiKey = \"https://bwithf.onrender.com\"\r\n   \r\n    useEffect(() => {\r\n      Fetchproduct(currentPage);\r\n      // fetchcourier();\r\n    }, [ ]);\r\n  \r\n\r\n    const Previous = () => {\r\n      if (currentPage > 1) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage - 1;\r\n  \r\n          //console.log(newPage)\r\n          Fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n    const Next = () => {\r\n      //console.log(hasMore)\r\n     if( Math.ceil(totalOrder/10)){}\r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = prevPage + 1;\r\n          //console.log(newPage)\r\n          Fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n    const numclick = (number) => {\r\n       \r\n      if (hasMore) {\r\n        setCurrentPage((prevPage) => {\r\n          const newPage = number\r\n          //console.log(newPage)\r\n          Fetchproduct(newPage);\r\n          return newPage;\r\n        });\r\n      }\r\n    };\r\n  \r\n     \r\n    const Fetchproduct = async (page) => {\r\n      //console.log(page, \"this is my fetching page\");\r\n    \r\n      try {\r\n        // Define headers including the auth token\r\n        const headers = {\r\n          'authtoken': localStorage.getItem(\"token\")\r\n        };\r\n    \r\n        const response = await axios.get(`${apiKey}/api/order/fetchallordersforadmin/RTO/${page}`, { headers });\r\n    \r\n        settotalOrder(response.data.totalOrder);\r\n    \r\n        if (response.data.orders.length === 0) {\r\n          setHasMore(false); // No more data to load\r\n          setData(response.data);\r\n        } else {\r\n          // Update state with the new data\r\n          setexceldata(response?.data?.orders);\r\n          setData(response.data);\r\n          setHasMore(true);\r\n        }\r\n    \r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n\r\n    const [openItemId, setOpenItemId] = useState(null);\r\n    const [productids, setproductids] = useState(\"\");\r\n    const [productquntity, setproductquntity] = useState(\"\");\r\n\r\n    const toggleOpen = (id) => {\r\n      setOpenItemId((prevId) => (prevId === id ? null : id));\r\n    };\r\n \r\n let changestatus =(status,iddata)=>{\r\n    setSelectedStatus(status)\r\n    setreturnserial(iddata.returnserial)\r\n    setproductids(iddata.productdata)\r\n    setproductquntity(iddata.Quntity)\r\n     \r\n        setshowpopup(true)  \r\n   \r\n    setid(iddata._id)\r\n  }\r\n  let update =async(status,id)=>{\r\nconsole.log(serialNumbers.length)\r\n\r\n    if(serialNumbers.length !== 0){\r\n      console.log(serialNumbers)\r\n      matchserialnum(serialNumbers,id)\r\n\r\n\r\n       await updateOrderStatus(status,id,productdata)\r\n    }\r\n    else{\r\n       matchProductIds(selectedProducts,id)\r\n      await updateOrderStatus(status,id,productdata)\r\n    }\r\n     Fetchproduct(currentPage)\r\n    }  \r\n\r\n    //serial \r\n\r\n    const [serialNumbers, setSerialNumbers] = useState([]);\r\n    const [newSerial, setNewSerial] = useState('');\r\n  \r\n    // Function to add a new serial number\r\n    const addSerialNumber = () => {\r\n      // Check if the input is in the allowed list and not already in the list\r\n      if (newSerial && returnserial.includes(newSerial) && !serialNumbers.includes(newSerial)) {\r\n        setSerialNumbers(prevSerialNumbers => [\r\n          ...prevSerialNumbers,\r\n          newSerial\r\n        ]);\r\n        setNewSerial(''); // Clear input field\r\n      }\r\n    };\r\n    // Function to remove a serial number\r\n    const removeSerialNumber = (numberToRemove) => {\r\n      setSerialNumbers(prevSerialNumbers =>\r\n        prevSerialNumbers.filter(number => number !== numberToRemove)\r\n      );\r\n    };\r\n\r\n\r\n    // const [selectedProducts, setSelectedProducts] = useState([]);\r\n\r\n    // // Handle checkbox change\r\n    // const handleCheckboxChange = (id) => {\r\n    //   setSelectedProducts(prevState => {\r\n    //     if (prevState.includes(id)) {\r\n    //       // Remove ID if already in the array (unchecked)\r\n    //       return prevState.filter(productId => productId !== id);\r\n    //     } else {\r\n    //       // Add ID if not in the array (checked)\r\n    //       return [...prevState, id];\r\n    //     }\r\n    //   });\r\n    // };\r\n \r\n\r\n    const [selectedProducts, setSelectedProducts] = useState({});\r\n\r\n    // Handle checkbox change\r\n    const handleCheckboxChange = (id) => {\r\n      setSelectedProducts(prevState => {\r\n        if (prevState[id]) {\r\n          // Remove ID if already in the object (unchecked)\r\n          const { [id]: _, ...newState } = prevState;\r\n          return newState;\r\n        } else {\r\n          // Add ID if not in the object (checked)\r\n          return { ...prevState, [id]: 1 }; // Default quantity to 1\r\n        }\r\n      });\r\n    };\r\n  \r\n    // Handle quantity change\r\n    const handleQuantityChange = (id, quantity) => {\r\n       if(productquntity >= quantity ){\r\n\r\n        setSelectedProducts(prevState => ({\r\n          ...prevState,\r\n          [id]: quantity\r\n        }));\r\n      };\r\n    }\r\n\r\n\r\nconsole.log(selectedProducts)\r\n\r\n\r\n\r\n//select ids for return function\r\n \r\nasync function matchProductIds(productIds,id) {\r\n  let token =localStorage.getItem('token')\r\n  try {\r\n    const response = await fetch(`${apiKey}/api/order/matchproductids/${id}/${productdata.Condition}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authtoken': token\r\n      },\r\n      body: JSON.stringify({ productIds }), // Sending the product IDs in the request body\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Handle response data\r\n    //console.log('Response data:', data);\r\n    return data;\r\n    \r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n//select serial for return function\r\n\r\nasync function matchserialnum(serialNumbers,id) {\r\n  try {\r\n    let token =localStorage.getItem('token')\r\n    const response = await fetch(`${apiKey}/api/order/matchserialnum/${id}/${productdata.Condition}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authtoken': token\r\n      },\r\n      body: JSON.stringify({ serialNumbers }), // Sending the product IDs in the request body\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Handle response data\r\n    //console.log('Response data:', data);\r\n    return data;\r\n\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst range = (start, end, step = 1) => {\r\n  const result = [];\r\n  for (let i = start; i < end; i += step) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\n\r\nconst totalPages = Math.ceil(totalOrder / 10);\r\nconst containerRef = useRef(null);\r\nconst [scrollPosition, setScrollPosition] = useState(0);\r\nconst pageWidth = 50; \r\nconst scrollLeft = () => {\r\n  if (containerRef.current) {\r\n    const newPosition = scrollPosition - pageWidth;\r\n    setScrollPosition(newPosition);\r\n    containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n  }\r\n};\r\n\r\nconst scrollRight = () => {\r\n  if (containerRef.current) {\r\n    const newPosition = scrollPosition + pageWidth;\r\n    setScrollPosition(newPosition);\r\n    containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n  }\r\n};\r\n\r\nconst onchange = (e) => {\r\n  setproductdata({...productdata, [e.target.name]: e.target.value});\r\n};\r\n//console.log(productdata);\r\n\r\n    return(\r\n        <>\r\n        <div className=\" \">\r\n        { showpopup && selectedStatus == \"Received\" &&<div className=\" flex justify-center \">\r\n        <div className=\"w-[40%] bg-white shadow-xl shadow-gray-300 z-20 border-[1px] border-gray-300 py-5 my-6 rounded-md  absolute\">\r\n          <div onClick={()=>{setshowpopup(false)}} className=\"rounded-full cursor-pointer w-6 h-6 inline-block  ml-2  text-center justify-self-center border-black border-[1px] \">\r\n          <div className=\"relative bottom-[7px] text-[20px]\">x\r\n            </div>\r\n            </div>\r\n          <div className=\"flex justify-center py-2\">\r\n            <div>Update some info</div>\r\n          </div>\r\n          <div className=\"grid    md:grid-cols-1 text-black  px-2 gap-2 md:gap-3 items-center\">\r\n\r\n          <select\r\nname=\"Retrunstatus\"\r\nonChange={onchange}\r\nvalue={productdata.Retrunstatus}\r\nclassName=\"px-3 py-1 border-black border-[2px] rounded-md\"\r\n>\r\n<option value=\"Retrunstatus\"  >\r\nRetrunstatus\r\n</option>\r\n \r\n  <option key={\"YES\"} value={\"YES\"}>\r\n  YES  </option>\r\n  <option key=\"NO\" value=\"NO\">\r\n  NO\r\n  </option>\r\n   \r\n \r\n</select>\r\n        \r\n                <select\r\nname=\"Condition\"\r\nonChange={onchange}\r\nvalue={productdata.Condition}\r\nclassName=\"px-3 py-1 border-black border-[2px] rounded-md\"\r\n>\r\n<option value=\"Condition\"  >\r\nCondition\r\n</option>\r\n \r\n  <option key={\"ok\"} value={\"ok\"}>\r\n  Ok  </option>\r\n  <option key=\"damaged\" value=\"damaged\">\r\n  Damaged\r\n  </option>\r\n  <option key=\"partial\" value=\"partial\">\r\n  Partial\r\n  </option>\r\n  <option key=\"fraud\" value=\"fraud\">\r\n  Fraud\r\n  </option>\r\n \r\n</select>          \r\n\r\n\r\n{returnserial ?<div>\r\n      <h1>Serial Number Manager</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newSerial}\r\n        onChange={(e) => setNewSerial(e.target.value)}\r\n        placeholder=\"Enter serial number\"\r\n      />\r\n      <button onClick={addSerialNumber}>Add Serial Number</button>\r\n      <ul>\r\n        {serialNumbers?.map(number => (\r\n          <li key={number}>\r\n            {number}\r\n            <button onClick={() => removeSerialNumber(number)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>: <div>\r\n      <form className=\"flex gap-2 flex-wrap\">\r\n        {productids?.map(product => (\r\n          <div key={product._id} className=\"flex items-center gap-2\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedProducts[product._id] !== undefined}\r\n                onChange={() => handleCheckboxChange(product._id)}\r\n              />\r\n              {product.name}\r\n            </label>\r\n            {selectedProducts[product._id] !== undefined && (\r\n              <input\r\n                type=\"number\"\r\n                value={selectedProducts[product._id]}\r\n                onChange={(e) => handleQuantityChange(product._id, Number(e.target.value))}\r\n                min=\"1\" // Ensure quantity is at least 1\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </form>\r\n    </div>}\r\n                </div>   \r\n                <div className=\"flex justify-center mt-1\">\r\n      <button className=\"text-[16px] bg-blue-600 rounded-full w-[50%] items-center mt-3  text-white px-2 py-[3px]\" onClick={()=>{update(selectedStatus,id)}}>Update</button>\r\n    </div>     \r\n                 \r\n</div>\r\n</div>}\r\n         <div className=\"  mt-4 w-[1350px] h-[510px] \">\r\n            <div className=\"bg-[#464646] flex sticky top-3 z-20  text-white mb-2  px-2 items-center \">\r\n                <div className=\" border-white  px-3 py-1  w-[160px] \">Platform</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Bill NO</div>\r\n                <div className=\"border-l-[1px] border-white w-[130px]  px-3 py-1 \">Order Id</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Product</div>\r\n                <div className=\"border-l-[1px] border-white w-[130px]  px-3 py-1 \">Quntity</div>\r\n                <div className=\"border-l-[1px] border-white w-[150px]  px-3 py-1 \">Amount</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">State</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Courier</div>\r\n                <div className=\"border-l-[1px] border-white w-[180px]  px-3 py-1 \">Tracking Id</div>\r\n                 <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">LR no.</div>\r\n                <div className=\"border-l-[1px] border-white w-[160px]  px-3 py-1 \">Return Date</div>\r\n                 \r\n            </div>\r\n            \r\n            {data?.orders?.map((person) => {\r\n \r\n const returndate1 = new Date(person.returndate);\r\n const doptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet returndate = returndate1.toLocaleDateString('en-IN', doptions);\r\nreturndate = returndate.split('/').join('-');\r\n\r\n return (\r\n            <div key={person._id} className=\"bg-[#f2f2f2] flex   text-black  px-2  items-center \">\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" px-3 py-1 overflow-x-auto w-[160px] \">{person.Platform.name} </Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Billno}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[130px] overflow-x-auto px-3 py-1 \">{person.OrderId}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Product}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Quntity}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[150px] overflow-x-auto px-3 py-1 \">{person.Salesamount}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.State}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[180px] overflow-x-auto px-3 py-1 \">{person.courier}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[140px] overflow-x-auto px-3 py-1 \">{person.trackingnumber}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Lrno}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[160px] overflow-x-auto px-3 py-1 \">{returndate}</Link>\r\n                   \r\n                { openItemId === person._id &&<div className=\" sticky right-0 flex gap-2     z-10\">\r\n          <div className=\" top-[-19px]  absolute right-28  bg-white  border-black border-[1px] p-2  \">\r\n      \r\n\r\n\r\n<div className=\"opstion  \">\r\n      \r\n        <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Received\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Received\",person)}} value=\"pending\">Received</option>\r\n    \r\n         <option className={`text-[12px] cursor-pointer ${selectedStatus==\"Lost\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"Lost\",person)}} value=\"canceled\">Lost</option>\r\n    \r\n    </div>\r\n {selectedStatus==\"Lost\" && <div className=\"flex justify-center mt-1\">\r\n      <button className=\"text-[10px] bg-blue-600 rounded-full   items-center   text-white px-2  \" onClick={()=>{update(selectedStatus,id)}}>Update</button>\r\n    </div> }\r\n    </div>\r\n    </div>}\r\n    <div className=\" sticky right-0 flex gap-2  bottom-2 z-10\">\r\n\r\n<div  \r\n  className=\"bg-black rounded-full w-6 h-6 flex justify-center items-center  absolute bottom-3 right-16 text-white     text-[16px]  \"\r\n  onClick={() => toggleOpen(person._id)}\r\n >\r\n <MdOutlineSystemSecurityUpdate  />   \r\n</div>\r\n \r\n</div>\r\n            </div>)})}\r\n        \r\n         </div>\r\n         <div className=\"    absolute md:w-[80%]  lg:w-[85%]   w-[90%] mt-10    \">\r\n        <div className=\"text-white w-[100%] pb-5 flex gap-10 justify-center \">\r\n          {currentPage !== 1 ?<button   onClick={()=>{Previous()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>:\r\n          <button disabled  onClick={()=>{Previous()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>}\r\n<div className=\"text-black border-black border-[1px] px-2 rounded-md\">{currentPage}</div>\r\n         { currentPage !== Math.ceil(totalOrder/10)  && totalOrder !== 0 ?  <button onClick={()=>{Next()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>:\r\n          <button disabled onClick={()=>{Next()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>}\r\n        </div>\r\n        <div className=\"w-[100%] pb-5 flex gap-10  justify-center \">\r\n        \r\n\r\n        <div className=\"flex items-center\">\r\n      {/* Scroll Left Button */}\r\n      <button\r\n        onClick={scrollLeft}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 mb-2 py-1 rounded-md mr-2\"\r\n        disabled={scrollPosition <= 0}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {/* Scroll Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative overflow-x-auto hide-scrollbar\"\r\n        style={{ maxWidth: \"150px\", whiteSpace: \"nowrap\" }}\r\n      >\r\n        <div className=\"flex gap-2\">\r\n          {range(1, totalPages+1)?.map(number => (\r\n            <div onClick={()=>{numclick(number)}}\r\n              key={number}\r\n              className=\"border-black text-center cursor-pointer border-[1px] px-2\"\r\n              style={{ width: pageWidth }}\r\n            >\r\n              {number}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll Right Button */}\r\n      <button\r\n        onClick={scrollRight}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 mb-2 rounded-md ml-2\"\r\n        disabled={scrollPosition >= (containerRef.current?.scrollWidth - containerRef.current?.clientWidth)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["RTO","params","_data$orders","_range","_containerRef$current","_containerRef$current2","updateOrderStatus","setexceldata","setsingleorderid","useContext","DataContext","selectedStatus","setSelectedStatus","useState","id","setid","showpopup","setshowpopup","loading","setLoading","returnserial","setreturnserial","data","setData","error","setError","currentPage","setCurrentPage","totalOrder","settotalOrder","hasMore","setHasMore","productdata","setproductdata","billno","billdate","LRNO","shippingcharges","Trackingid","Courier","Deliverybydate","Retrunstatus","Condition","apiKey","useEffect","Fetchproduct","Previous","prevPage","newPage","Next","Math","ceil","async","headers","localStorage","getItem","response","axios","get","page","_response$data","orders","length","openItemId","setOpenItemId","productids","setproductids","productquntity","setproductquntity","changestatus","status","iddata","Quntity","_id","update","console","log","serialNumbers","token","fetch","method","body","JSON","stringify","ok","Error","json","matchserialnum","productIds","matchProductIds","selectedProducts","setSerialNumbers","newSerial","setNewSerial","setSelectedProducts","totalPages","containerRef","useRef","scrollPosition","setScrollPosition","onchange","e","target","name","value","_jsx","_Fragment","children","_jsxs","className","onClick","onChange","type","placeholder","addSerialNumber","includes","prevSerialNumbers","map","number","removeSerialNumber","numberToRemove","filter","product","checked","undefined","prevState","_","newState","handleCheckboxChange","handleQuantityChange","quantity","Number","min","person","returndate","Date","toLocaleDateString","year","month","day","split","join","Link","to","Platform","Billno","OrderId","Product","Salesamount","State","courier","trackingnumber","Lrno","prevId","toggleOpen","MdOutlineSystemSecurityUpdate","FaArrowAltCircleLeft","disabled","FaArrowAltCircleRight","scrollLeft","current","newPosition","scrollTo","left","behavior","ref","style","maxWidth","whiteSpace","start","end","step","arguments","result","i","push","range","numclick","width","scrollRight","scrollWidth","clientWidth"],"sourceRoot":""}